// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.JSInvocationMirror = {"":"Object;memberName>,_internalName,_kind,_liblib0$_arguments,_namedArgumentNames,_namedIndices",
 get$isGetter: function() {
  return $.eq(this._kind, 1);
},
 get$isSetter: function() {
  return $.eq(this._kind, 2);
},
 get$isAccessor: function() {
  return !$.eqB(this._kind, 0);
},
 get$positionalArguments: function() {
  var list, t1, t3, t4, argumentCount, index;
  if (this.get$isGetter() === true)
    return;
  list = [];
  t1 = this._liblib0$_arguments;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$positionalArguments$bailout(1, t1, list);
  t3 = t1.length;
  t4 = this._namedArgumentNames;
  t4 = $.getInterceptor$JSStringJSArray(t4).get$length(t4);
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  argumentCount = t3 - t4;
  for (index = 0; index < argumentCount; ++index) {
    if (index >= t1.length)
      throw $.ioore(index);
    list.push(t1[index]);
  }
  return list;
},
 get$positionalArguments$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      list = env1;
      t1 = env0;
      break;
    case 2:
      argumentCount = env2;
      list = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isGetter() === true)
        return;
      list = [];
      t1 = this._liblib0$_arguments;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      t4 = this._namedArgumentNames;
      argumentCount = $.sub(t3, $.getInterceptor$JSStringJSArray(t4).get$length(t4));
    case 2:
      var list, t1, t3, t4, argumentCount, index;
      state0 = 0;
      for (index = 0; $.ltB(index, argumentCount); ++index)
        list.push($.index(t1, index));
      return list;
  }
},
 get$namedArguments: function() {
  var map, t2, namedArgumentCount, t4, t6, namedArgumentsStartIndex, t1, i, t3, t5;
  if (this.get$isAccessor() === true)
    return;
  map = $.makeLiteralMap([]);
  if (typeof map !== 'object' || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.is$JavaScriptIndexingBehavior())
    return this.get$namedArguments$bailout(1, map);
  t2 = this._namedArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(2, t2, map);
  namedArgumentCount = t2.length;
  t4 = this._liblib0$_arguments;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(4, t2, t4, map, namedArgumentCount);
  t6 = t4.length;
  namedArgumentsStartIndex = t6 - namedArgumentCount;
  for (t1 = map.length, i = 0; i < namedArgumentCount; ++i) {
    t3 = t2[i];
    t5 = namedArgumentsStartIndex + i;
    if (t5 < 0 || t5 >= t6)
      throw $.ioore(t5);
    t5 = t4[t5];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1)
      throw $.ioore(t3);
    map[t3] = t5;
  }
  return map;
},
 get$namedArguments$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      map = env0;
      break;
    case 2:
      map = env1;
      t2 = env0;
      break;
    case 3:
      namedArgumentCount = env2;
      map = env1;
      t2 = env0;
      break;
    case 4:
      namedArgumentCount = env3;
      map = env2;
      t5 = env1;
      t2 = env0;
      break;
    case 5:
      namedArgumentCount = env4;
      map = env3;
      namedArgumentsStartIndex = env2;
      t5 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isAccessor() === true)
        return;
      map = $.makeLiteralMap([]);
    case 1:
      state0 = 0;
      t2 = this._namedArgumentNames;
    case 2:
      state0 = 0;
      namedArgumentCount = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
    case 3:
      state0 = 0;
      t5 = this._liblib0$_arguments;
    case 4:
      state0 = 0;
      namedArgumentsStartIndex = $.sub($.getInterceptor$JSStringJSArray(t5).get$length(t5), namedArgumentCount);
    case 5:
      var map, t2, namedArgumentCount, t5, namedArgumentsStartIndex, i;
      state0 = 0;
      for (i = 0; $.ltB(i, namedArgumentCount); ++i)
        $.indexSet(map, $.index(t2, i), $.index(t5, $.add(namedArgumentsStartIndex, i)));
      return map;
  }
}
};

$$.StackTrace = {"":"Object;stack",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : "";
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
},
 is$Function: true
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.ConstantMap = {"":"Object;length>,_jsObject,_liblib0$_keys>",
 containsKey$1: function(key) {
  if (typeof key !== 'string')
    return this.containsKey$1$bailout(1, key);
  if (key === "__proto__")
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 containsKey$1$bailout: function(state0, key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._liblib0$_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(f, this));
},
 get$keys: function() {
  return this._liblib0$_keys;
},
 get$values: function() {
  var result, t1;
  result = [];
  t1 = this._liblib0$_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_values_anon(this, result));
  return result;
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":"Object;_tag>,_tags,_set>"
};

$$.JSSyntaxRegExp = {"":"Object;_liblib0$_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"":"Object;pattern>,str,start,end,_groups",
 start$0: function() {
  return this.start.call$0();
},
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_liblib0$_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern>",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 start$0: function() {
  return this.start.call$0();
}
};

$$._DateImpl = {"":"Object;millisecondsSinceEpoch>,isUtc",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
  else
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout1(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout1(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout1: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 is$Date: true
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message>",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message>",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {"":"Object;message>",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
},
 is$Exception: true
};

$$.FormatException = {"":"Object;message>",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future has not been completed";
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future already completed";
},
 is$Exception: true
};

$$.FutureUnhandledException = {"":"Object;source,stackTrace>",
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.source;
  t1 = $.getInterceptor(t1).toString$0(t1);
  t2 = "FutureUnhandledException: exception while executing Future\n  " + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\n  ")) + "\n" + "original stack trace:\n  ";
  t3 = this.stackTrace;
  t3 = $.getInterceptor(t3).toString$0(t3);
  return t2 + $.S($.getInterceptor$JSString(t3).replaceAll$2(t3, "\n", "\n  "));
},
 is$Exception: true
};

$$._FutureImpl = {"":"Object;_isComplete,_value,_exception,_stackTrace,_exceptionHandled,_throwOnException,_successListeners,_exceptionHandlers,_completionListeners",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true) {
    this._throwOnException = true;
    this._successListeners.push(onSuccess);
  } else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.CONSTANT0.iterator$0(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.CONSTANT0.iterator$0(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._throwOnException)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.CONSTANT0.iterator$0(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"":"Object;_futureImpl",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception, null);
}
};

$$._HashMapImpl = {"":"Object;_keys>,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      hash = $.and(t1, this._keys.length - 1);
      numberOfProbes = 1;
      insertionIndex = -1;
    case 2:
      var t1, key, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(this._keys.length);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT3)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CONSTANT3)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.operator$index$1$bailout0(1, index);
  if (index < 0)
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout0: function(state0, index) {
  var t1;
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, t3, value;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.remove$1$bailout(1, index);
  if (index >= 0) {
    t1 = this._numberOfEntries;
    if (typeof t1 !== 'number')
      return this.remove$1$bailout(2, index, t1);
    this._numberOfEntries = t1 - 1;
    t3 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t3.length)
      throw $.ioore(index);
    value = t3[index];
    t3[index] = null;
    t3 = this._keys;
    if (index >= t3.length)
      throw $.ioore(index);
    t3[index] = $.CONSTANT3;
    t3 = this._numberOfDeleted;
    if (typeof t3 !== 'number')
      return this.remove$1$bailout(3, t3, value);
    this._numberOfDeleted = t3 + 1;
    return value;
  }
  return;
},
 remove$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      t1 = env1;
      index = env0;
      break;
    case 3:
      value = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      index = this._probeForLookup$1(key);
    case 1:
      state0 = 0;
    default:
      var index, t1, t3, value;
      if (state0 === 3 || state0 === 2 || state0 === 0 && $.geB(index, 0))
        switch (state0) {
          case 0:
            t1 = this._numberOfEntries;
          case 2:
            state0 = 0;
            this._numberOfEntries = $.sub(t1, 1);
            t3 = this._values;
            if (index !== (index | 0))
              throw $.iae(index);
            if (index < 0 || index >= t3.length)
              throw $.ioore(index);
            value = t3[index];
            t3[index] = null;
            t3 = this._keys;
            if (index >= t3.length)
              throw $.ioore(index);
            t3[index] = $.CONSTANT3;
            t3 = this._numberOfDeleted;
          case 3:
            state0 = 0;
            this._numberOfDeleted = $.add(t3, 1);
            return value;
        }
      return;
  }
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CONSTANT3)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.i_0 = 0;
  this.forEach$1(new $._HashMapImpl_keys_anon(t1, list));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.i_0 = 0;
  this.forEach$1(new $._HashMapImpl_values_anon(t1, list));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key>,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map=",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var t1, entry;
  t1 = this._map;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout(1, key, t1);
  if (key !== (key | 0))
    throw $.iae(key);
  if (key < 0 || key >= t1.length)
    throw $.ioore(key);
  entry = t1[key];
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 operator$index$1$bailout: function(state0, key, t1) {
  var entry = $.index(t1, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.index_0 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_keys_anon(t1, list));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.index_0 = 0;
  this._list.forEach$1(new $._LinkedHashMapImpl_values_anon(t1, list));
  return list;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
},
 noSuchMethod$1: function(invocation) {
  throw $.$$throw($.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
},
 floor$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("floor", "floor$0", 0, [], []));
},
 _postMessage_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_2", "_postMessage_2$1", 0, [$0], []));
},
 allMatches$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("allMatches", "allMatches$1", 0, [$0], []));
},
 getZoom$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getZoom", "getZoom$0", 0, [], []));
},
 $$dom_addEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_addEventListener", "$$dom_addEventListener$3", 0, [$0, $1, $2], []));
},
 getBounds$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getBounds", "getBounds$0", 0, [], []));
},
 setTimeout$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setTimeout", "setTimeout$2", 0, [$0, $1], []));
},
 operator$xor$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("^", "operator$xor$1", 0, [$0], []));
},
 _probeForAdding$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForAdding", "_probeForAdding$1", 0, [$0], []));
},
 _deserializeMap$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeMap", "_deserializeMap$1", 0, [$0], []));
},
 _liblib4$_deserializeMap$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeMap", "_liblib4$_deserializeMap$1", 0, [$0], []));
},
 operator$sub$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("-", "operator$sub$1", 0, [$0], []));
},
 closePopup$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("closePopup", "closePopup$0", 0, [], []));
},
 concat$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("concat", "concat$1", 0, [$0], []));
},
 _add_1$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_add_1", "_add_1$2", 0, [$0, $1], []));
},
 _toList$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_toList", "_toList$0", 0, [], []));
},
 remove$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$0", 0, [], []));
},
 remove$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$1", 0, [$0], []));
},
 startsWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("startsWith", "startsWith$1", 0, [$0], []));
},
 clearLayers$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clearLayers", "clearLayers$0", 0, [], []));
},
 getRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("getRange", "getRange$2", 0, [$0, $1], []));
},
 callSync$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("callSync", "callSync$1", 0, [$0], []));
},
 operator$le$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("<=", "operator$le$1", 0, [$0], []));
},
 stopAnimation$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stopAnimation", "stopAnimation$0", 0, [], []));
},
 _get_1$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_get_1", "_get_1$1", 0, [$0], []));
},
 contains$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$1", 0, [$0], []));
},
 contains$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$2", 0, [$0, $1], []));
},
 unregister$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("unregister", "unregister$1", 0, [$0], []));
},
 handleException$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("handleException", "handleException$1", 0, [$0], []));
},
 add$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("add", "add$1", 0, [$0], []));
},
 operator$mul$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("*", "operator$mul$1", 0, [$0], []));
},
 _complete$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_complete", "_complete$0", 0, [], []));
},
 get$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("get", "get$1", 0, [$0], []));
},
 addAll$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addAll", "addAll$1", 0, [$0], []));
},
 stringifyValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("stringifyValue", "stringifyValue$1", 0, [$0], []));
},
 queryAll$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("queryAll", "queryAll$1", 0, [$0], []));
},
 setLatLng$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("setLatLng", "setLatLng$1", 0, [$0], []));
},
 register$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("register", "register$2", 0, [$0, $1], []));
},
 getSouthWest$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getSouthWest", "getSouthWest$0", 0, [], []));
},
 complete$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("complete", "complete$1", 0, [$0], []));
},
 _throwUnmodifiable$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_throwUnmodifiable", "_throwUnmodifiable$0", 0, [], []));
},
 map$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("map", "map$1", 0, [$0], []));
},
 on$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("on", "on$2", 0, [$0, $1], []));
},
 toSendPort$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toSendPort", "toSendPort$0", 0, [], []));
},
 abs$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("abs", "abs$0", 0, [], []));
},
 enterScope$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("enterScope", "enterScope$0", 0, [], []));
},
 $$dom_dispatchEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_dispatchEvent", "$$dom_dispatchEvent$1", 0, [$0], []));
},
 $$dom_setAttribute$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_setAttribute", "$$dom_setAttribute$2", 0, [$0, $1], []));
},
 _getPropertyValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getPropertyValue", "_getPropertyValue$1", 0, [$0], []));
},
 postMessage$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("postMessage", "postMessage$1", 0, [$0], []));
},
 then$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("then", "then$1", 0, [$0], []));
},
 startAnimation$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("startAnimation", "startAnimation$0", 0, [], []));
},
 indexOf$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$2", 0, [$0, $1], []));
},
 operator$tdiv$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("~/", "operator$tdiv$1", 0, [$0], []));
},
 setContent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("setContent", "setContent$1", 0, [$0], []));
},
 operator$indexSet$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("[]=", "operator$indexSet$2", 0, [$0, $1], []));
},
 _link$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_link", "_link$2", 0, [$0, $1], []));
},
 operator$shl$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("<<", "operator$shl$1", 0, [$0], []));
},
 operator$lt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("<", "operator$lt$1", 0, [$0], []));
},
 runIteration$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("runIteration", "runIteration$0", 0, [], []));
},
 setIcon$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("setIcon", "setIcon$1", 0, [$0], []));
},
 maybeCloseWorker$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("maybeCloseWorker", "maybeCloseWorker$0", 0, [], []));
},
 operator$and$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("&", "operator$and$1", 0, [$0], []));
},
 addListeners$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addListeners", "addListeners$1", 0, [$0], []));
},
 openPopup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("openPopup", "openPopup$1", 0, [$0], []));
},
 send$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("send", "send$1", 0, [$0], []));
},
 addTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addTo", "addTo$1", 0, [$0], []));
},
 addTo$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("addTo", "addTo$2", 0, [$0, $1], []));
},
 call$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$0", 0, [], []));
},
 call$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$1", 0, [$0], []));
},
 call$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$2", 0, [$0, $1], []));
},
 call$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$3", 0, [$0, $1, $2], []));
},
 call$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$4", 0, [$0, $1, $2, $3], []));
},
 log$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("log", "log$1", 0, [$0], []));
},
 $$dom_removeChild$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeChild", "$$dom_removeChild$1", 0, [$0], []));
},
 addLayer$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addLayer", "addLayer$1", 0, [$0], []));
},
 toJson$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toJson", "toJson$0", 0, [], []));
},
 replaceWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("replaceWith", "replaceWith$1", 0, [$0], []));
},
 operator$index$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("[]", "operator$index$1", 0, [$0], []));
},
 registerPort$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("registerPort", "registerPort$2", 0, [$0, $1], []));
},
 operator$div$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("/", "operator$div$1", 0, [$0], []));
},
 _setGlobals$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setGlobals", "_setGlobals$0", 0, [], []));
},
 operator$ge$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror(">=", "operator$ge$1", 0, [$0], []));
},
 _probeForLookup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForLookup", "_probeForLookup$1", 0, [$0], []));
},
 replaceAll$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("replaceAll", "replaceAll$2", 0, [$0, $1], []));
},
 start$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("start", "start$0", 0, [], []));
},
 firstMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("firstMatch", "firstMatch$1", 0, [$0], []));
},
 _nativeDetectEnvironment$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_nativeDetectEnvironment", "_nativeDetectEnvironment$0", 0, [], []));
},
 setView$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setView", "setView$2", 0, [$0, $1], []));
},
 truncate$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("truncate", "truncate$0", 0, [], []));
},
 completeException$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("completeException", "completeException$1", 0, [$0], []));
},
 completeException$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("completeException", "completeException$2", 0, [$0, $1], []));
},
 lookup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lookup", "lookup$1", 0, [$0], []));
},
 next$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("next", "next$0", 0, [], []));
},
 $$dom_removeEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeEventListener", "$$dom_removeEventListener$3", 0, [$0, $1, $2], []));
},
 iterator$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("iterator", "iterator$0", 0, [], []));
},
 debug$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("debug", "debug$1", 0, [$0], []));
},
 cleanup$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("cleanup", "cleanup$0", 0, [], []));
},
 push$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("push", "push$1", 0, [$0], []));
},
 $$dom_removeAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeAttribute", "$$dom_removeAttribute$1", 0, [$0], []));
},
 hasMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("hasMatch", "hasMatch$1", 0, [$0], []));
},
 $$dom_createEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_createEvent", "$$dom_createEvent$1", 0, [$0], []));
},
 previousEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("previousEntry", "previousEntry$0", 0, [], []));
},
 $$dom_getAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_getAttribute", "$$dom_getAttribute$1", 0, [$0], []));
},
 run$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("run", "run$0", 0, [], []));
},
 close$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("close", "close$0", 0, [], []));
},
 substring$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$1", 0, [$0], []));
},
 substring$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$2", 0, [$0, $1], []));
},
 _dispatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_dispatch", "_dispatch$1", 0, [$0], []));
},
 _liblib4$_dispatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_dispatch", "_liblib4$_dispatch$1", 0, [$0], []));
},
 operator$shr$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror(">>", "operator$shr$1", 0, [$0], []));
},
 query$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("query", "query$1", 0, [$0], []));
},
 charCodeAt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("charCodeAt", "charCodeAt$1", 0, [$0], []));
},
 _initialize$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_initialize", "_initialize$1", 0, [$0], []));
},
 $$dom_replaceChild$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_replaceChild", "$$dom_replaceChild$2", 0, [$0, $1], []));
},
 $$dom_hasAttribute$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_hasAttribute", "$$dom_hasAttribute$1", 0, [$0], []));
},
 clear$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clear", "clear$0", 0, [], []));
},
 prepend$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("prepend", "prepend$1", 0, [$0], []));
},
 addLast$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addLast", "addLast$1", 0, [$0], []));
},
 _postMessage_1$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_1", "_postMessage_1$2", 0, [$0, $1], []));
},
 zoomTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("zoomTo", "zoomTo$1", 0, [$0], []));
},
 $$dom_initCustomEvent$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_initCustomEvent", "$$dom_initCustomEvent$4", 0, [$0, $1, $2, $3], []));
},
 forEach$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("forEach", "forEach$1", 0, [$0], []));
},
 _deserializeHelper$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeHelper", "_deserializeHelper$1", 0, [$0], []));
},
 _liblib4$_deserializeHelper$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeHelper", "_liblib4$_deserializeHelper$1", 0, [$0], []));
},
 _deserializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeList", "_deserializeList$1", 0, [$0], []));
},
 _liblib4$_deserializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeList", "_liblib4$_deserializeList$1", 0, [$0], []));
},
 endsWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("endsWith", "endsWith$1", 0, [$0], []));
},
 _asNonSentinelEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_asNonSentinelEntry", "_asNonSentinelEntry$0", 0, [], []));
},
 removeFirst$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("removeFirst", "removeFirst$0", 0, [], []));
},
 _grow$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_grow", "_grow$1", 0, [$0], []));
},
 _serializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_serializeList", "_serializeList$1", 0, [$0], []));
},
 _liblib4$_serializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_serializeList", "_liblib4$_serializeList$1", 0, [$0], []));
},
 globalize$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("globalize", "globalize$1", 0, [$0], []));
},
 filter$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("filter", "filter$1", 0, [$0], []));
},
 operator$add$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("+", "operator$add$1", 0, [$0], []));
},
 _nativeInitWorkerMessageHandler$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_nativeInitWorkerMessageHandler", "_nativeInitWorkerMessageHandler$0", 0, [], []));
},
 _add_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_add_2", "_add_2$1", 0, [$0], []));
},
 _advance$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_advance", "_advance$0", 0, [], []));
},
 loadMap$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("loadMap", "loadMap$0", 0, [], []));
},
 containsKey$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("containsKey", "containsKey$1", 0, [$0], []));
},
 _ensureCapacity$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureCapacity", "_ensureCapacity$0", 0, [], []));
},
 removeRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("removeRange", "removeRange$2", 0, [$0, $1], []));
},
 _runHelper$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_runHelper", "_runHelper$0", 0, [], []));
},
 getNorthEast$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getNorthEast", "getNorthEast$0", 0, [], []));
},
 exitScope$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("exitScope", "exitScope$0", 0, [], []));
},
 operator$gt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror(">", "operator$gt$1", 0, [$0], []));
},
 _checkReplyTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_checkReplyTo", "_checkReplyTo$1", 0, [$0], []));
},
 _callback$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_callback$1", 0, [$0], []));
},
 _liblib4$_callback$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_liblib4$_callback$2", 0, [$0, $1], []));
},
 process$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("process", "process$0", 0, [], []));
},
 $$dom_createElement$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_createElement", "$$dom_createElement$1", 0, [$0], []));
},
 enqueue$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("enqueue", "enqueue$3", 0, [$0, $1, $2], []));
},
 operator$negate$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("unary-", "operator$negate$0", 0, [], []));
},
 ceil$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ceil", "ceil$0", 0, [], []));
},
 lastEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("lastEntry", "lastEntry$0", 0, [], []));
},
 _matches$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_matches", "_matches$1", 0, [$0], []));
},
 _deserializeRef$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeRef", "_deserializeRef$1", 0, [$0], []));
},
 _liblib4$_deserializeRef$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeRef", "_liblib4$_deserializeRef$1", 0, [$0], []));
},
 $$dom_appendChild$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_appendChild", "$$dom_appendChild$1", 0, [$0], []));
},
 reset$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("reset", "reset$0", 0, [], []));
},
 lookupPort$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lookupPort", "lookupPort$1", 0, [$0], []));
},
 eval$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("eval", "eval$1", 0, [$0], []));
},
 stop$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stop", "stop$0", 0, [], []));
},
 _get_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_get_2", "_get_2$1", 0, [$0], []));
},
 clearFeatureLayer$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clearFeatureLayer", "clearFeatureLayer$0", 0, [], []));
},
 removeLast$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("removeLast", "removeLast$0", 0, [], []));
},
 get$_liblib1$_id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_id", "_liblib1$_id$0", 1, [], []));
},
 get$_liblib4$_id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_id", "_liblib4$_id$0", 1, [], []));
},
 get$_previous: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_previous", "_previous$0", 1, [], []));
},
 get$key: function() {
  return this.noSuchMethod$1($.createInvocationMirror("key", "key$0", 1, [], []));
},
 get$latitude: function() {
  return this.noSuchMethod$1($.createInvocationMirror("latitude", "latitude$0", 1, [], []));
},
 get$lng: function() {
  return this.noSuchMethod$1($.createInvocationMirror("lng", "lng$0", 1, [], []));
},
 get$_backingMap: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_backingMap", "_backingMap$0", 1, [], []));
},
 get$longitude: function() {
  return this.noSuchMethod$1($.createInvocationMirror("longitude", "longitude$0", 1, [], []));
},
 get$isNaN: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isNaN", "isNaN$0", 1, [], []));
},
 get$elements: function() {
  return this.noSuchMethod$1($.createInvocationMirror("elements", "elements$0", 1, [], []));
},
 get$clickHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clickHandler", "clickHandler$0", 1, [], []));
},
 get$memberName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("memberName", "memberName$0", 1, [], []));
},
 get$$$dom_attributes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_attributes", "$$dom_attributes$0", 1, [], []));
},
 get$open: function() {
  return this.noSuchMethod$1($.createInvocationMirror("open", "open$0", 1, [], []));
},
 get$inMilliseconds: function() {
  return this.noSuchMethod$1($.createInvocationMirror("inMilliseconds", "inMilliseconds$0", 1, [], []));
},
 get$namedArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("namedArguments", "namedArguments$0", 1, [], []));
},
 get$_featureLayerGroup: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_featureLayerGroup", "_featureLayerGroup$0", 1, [], []));
},
 get$_set: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_set", "_set$0", 1, [], []));
},
 get$Point: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Point", "Point$0", 1, [], []));
},
 get$_mapFeature: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mapFeature", "_mapFeature$0", 1, [], []));
},
 get$Popup: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Popup", "Popup$0", 1, [], []));
},
 get$userAgent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("userAgent", "userAgent$0", 1, [], []));
},
 get$_isConsoleDefined: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_isConsoleDefined", "_isConsoleDefined$0", 1, [], []));
},
 get$mouseoverHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseoverHandler", "mouseoverHandler$0", 1, [], []));
},
 get$rootContext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("rootContext", "rootContext$0", 1, [], []));
},
 get$sb: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sb", "sb$0", 1, [], []));
},
 get$last: function() {
  return this.noSuchMethod$1($.createInvocationMirror("last", "last$0", 1, [], []));
},
 get$height: function() {
  return this.noSuchMethod$1($.createInvocationMirror("height", "height$0", 1, [], []));
},
 get$length: function() {
  return this.noSuchMethod$1($.createInvocationMirror("length", "length$0", 1, [], []));
},
 get$isWorker: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isWorker", "isWorker$0", 1, [], []));
},
 get$_element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_element", "_element$0", 1, [], []));
},
 get$hasNext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("hasNext", "hasNext$0", 1, [], []));
},
 get$_liblib3$_map: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_map", "_liblib3$_map$0", 1, [], []));
},
 get$mainManager: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mainManager", "mainManager$0", 1, [], []));
},
 get$future: function() {
  return this.noSuchMethod$1($.createInvocationMirror("future", "future$0", 1, [], []));
},
 get$MousePosition: function() {
  return this.noSuchMethod$1($.createInvocationMirror("MousePosition", "MousePosition$0", 1, [], []));
},
 get$id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("id", "id$0", 1, [], []));
},
 get$parent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("parent", "parent$0", 1, [], []));
},
 get$value: function() {
  return this.noSuchMethod$1($.createInvocationMirror("value", "value$0", 1, [], []));
},
 get$data: function() {
  return this.noSuchMethod$1($.createInvocationMirror("data", "data$0", 1, [], []));
},
 get$TileLayer: function() {
  return this.noSuchMethod$1($.createInvocationMirror("TileLayer", "TileLayer$0", 1, [], []));
},
 get$_popup: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_popup", "_popup$0", 1, [], []));
},
 get$type: function() {
  return this.noSuchMethod$1($.createInvocationMirror("type", "type$0", 1, [], []));
},
 get$lat: function() {
  return this.noSuchMethod$1($.createInvocationMirror("lat", "lat$0", 1, [], []));
},
 get$initialLon: function() {
  return this.noSuchMethod$1($.createInvocationMirror("initialLon", "initialLon$0", 1, [], []));
},
 get$close: function() {
  return this.noSuchMethod$1($.createInvocationMirror("close", "close$0", 1, [], []));
},
 get$moveendEvent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("moveendEvent", "moveendEvent$0", 1, [], []));
},
 get$positionalArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("positionalArguments", "positionalArguments$0", 1, [], []));
},
 get$mouseoutHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseoutHandler", "mouseoutHandler$0", 1, [], []));
},
 get$isGetter: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isGetter", "isGetter$0", 1, [], []));
},
 get$currentManagerId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentManagerId", "currentManagerId$0", 1, [], []));
},
 get$_filtered: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_filtered", "_filtered$0", 1, [], []));
},
 get$message: function() {
  return this.noSuchMethod$1($.createInvocationMirror("message", "message$0", 1, [], []));
},
 get$_next: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_next", "_next$0", 1, [], []));
},
 get$pattern: function() {
  return this.noSuchMethod$1($.createInvocationMirror("pattern", "pattern$0", 1, [], []));
},
 get$LatLng: function() {
  return this.noSuchMethod$1($.createInvocationMirror("LatLng", "LatLng$0", 1, [], []));
},
 get$sendPort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sendPort", "sendPort$0", 1, [], []));
},
 get$_portId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_portId", "_portId$0", 1, [], []));
},
 get$initialZoom: function() {
  return this.noSuchMethod$1($.createInvocationMirror("initialZoom", "initialZoom$0", 1, [], []));
},
 get$_futurePort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_futurePort", "_futurePort$0", 1, [], []));
},
 get$children: function() {
  return this.noSuchMethod$1($.createInvocationMirror("children", "children$0", 1, [], []));
},
 get$on: function() {
  return this.noSuchMethod$1($.createInvocationMirror("on", "on$0", 1, [], []));
},
 get$fromCommandLine: function() {
  return this.noSuchMethod$1($.createInvocationMirror("fromCommandLine", "fromCommandLine$0", 1, [], []));
},
 get$ignoreCase: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ignoreCase", "ignoreCase$0", 1, [], []));
},
 get$Icon: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Icon", "Icon$0", 1, [], []));
},
 get$console: function() {
  return this.noSuchMethod$1($.createInvocationMirror("console", "console$0", 1, [], []));
},
 get$element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("element", "element$0", 1, [], []));
},
 get$_registry: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_registry", "_registry$0", 1, [], []));
},
 get$innerHeight: function() {
  return this.noSuchMethod$1($.createInvocationMirror("innerHeight", "innerHeight$0", 1, [], []));
},
 get$attributes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("attributes", "attributes$0", 1, [], []));
},
 get$width: function() {
  return this.noSuchMethod$1($.createInvocationMirror("width", "width$0", 1, [], []));
},
 get$$$dom_namespaceUri: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_namespaceUri", "$$dom_namespaceUri$0", 1, [], []));
},
 get$multiLine: function() {
  return this.noSuchMethod$1($.createInvocationMirror("multiLine", "multiLine$0", 1, [], []));
},
 get$animatedPolygon: function() {
  return this.noSuchMethod$1($.createInvocationMirror("animatedPolygon", "animatedPolygon$0", 1, [], []));
},
 get$topEventLoop: function() {
  return this.noSuchMethod$1($.createInvocationMirror("topEventLoop", "topEventLoop$0", 1, [], []));
},
 get$body: function() {
  return this.noSuchMethod$1($.createInvocationMirror("body", "body$0", 1, [], []));
},
 get$error: function() {
  return this.noSuchMethod$1($.createInvocationMirror("error", "error$0", 1, [], []));
},
 get$Map: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Map", "Map$0", 1, [], []));
},
 get$$$dom_localName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_localName", "$$dom_localName$0", 1, [], []));
},
 get$L: function() {
  return this.noSuchMethod$1($.createInvocationMirror("L", "L$0", 1, [], []));
},
 get$_scopeIndices: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_scopeIndices", "_scopeIndices$0", 1, [], []));
},
 get$moveendHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("moveendHandler", "moveendHandler$0", 1, [], []));
},
 get$style: function() {
  return this.noSuchMethod$1($.createInvocationMirror("style", "style$0", 1, [], []));
},
 get$innerWidth: function() {
  return this.noSuchMethod$1($.createInvocationMirror("innerWidth", "innerWidth$0", 1, [], []));
},
 get$documentElement: function() {
  return this.noSuchMethod$1($.createInvocationMirror("documentElement", "documentElement$0", 1, [], []));
},
 get$_keys: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_keys", "_keys$0", 1, [], []));
},
 get$detail: function() {
  return this.noSuchMethod$1($.createInvocationMirror("detail", "detail$0", 1, [], []));
},
 get$_listenerName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_listenerName", "_listenerName$0", 1, [], []));
},
 get$$$dom_childNodes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_childNodes", "$$dom_childNodes$0", 1, [], []));
},
 get$managers: function() {
  return this.noSuchMethod$1($.createInvocationMirror("managers", "managers$0", 1, [], []));
},
 get$nextIsolateId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId", "nextIsolateId$0", 1, [], []));
},
 get$isComplete: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isComplete", "isComplete$0", 1, [], []));
},
 get$millisecondsSinceEpoch: function() {
  return this.noSuchMethod$1($.createInvocationMirror("millisecondsSinceEpoch", "millisecondsSinceEpoch$0", 1, [], []));
},
 get$isEmpty: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isEmpty", "isEmpty$0", 1, [], []));
},
 get$currentContext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentContext", "currentContext$0", 1, [], []));
},
 get$_liblib4$_receivePort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_receivePort", "_liblib4$_receivePort$0", 1, [], []));
},
 get$_port: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_port", "_port$0", 1, [], []));
},
 get$imageURL: function() {
  return this.noSuchMethod$1($.createInvocationMirror("imageURL", "imageURL$0", 1, [], []));
},
 get$dimension: function() {
  return this.noSuchMethod$1($.createInvocationMirror("dimension", "dimension$0", 1, [], []));
},
 get$needSerialization: function() {
  return this.noSuchMethod$1($.createInvocationMirror("needSerialization", "needSerialization$0", 1, [], []));
},
 get$Marker: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Marker", "Marker$0", 1, [], []));
},
 get$CircleMarker: function() {
  return this.noSuchMethod$1($.createInvocationMirror("CircleMarker", "CircleMarker$0", 1, [], []));
},
 get$isolates: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isolates", "isolates$0", 1, [], []));
},
 get$$$dom_lastElementChild: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_lastElementChild", "$$dom_lastElementChild$0", 1, [], []));
},
 get$_liblib4$_callback: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_liblib4$_callback$0", 1, [], []));
},
 get$$$dom_firstElementChild: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_firstElementChild", "$$dom_firstElementChild$0", 1, [], []));
},
 get$$$dom_body: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_body", "$$dom_body$0", 1, [], []));
},
 get$LayerGroup: function() {
  return this.noSuchMethod$1($.createInvocationMirror("LayerGroup", "LayerGroup$0", 1, [], []));
},
 get$ports: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ports", "ports$0", 1, [], []));
},
 get$_tag: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_tag", "_tag$0", 1, [], []));
},
 get$nodes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nodes", "nodes$0", 1, [], []));
},
 get$_liblib4$_isolateId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_isolateId", "_liblib4$_isolateId$0", 1, [], []));
},
 get$stackTrace: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stackTrace", "stackTrace$0", 1, [], []));
},
 get$navigator: function() {
  return this.noSuchMethod$1($.createInvocationMirror("navigator", "navigator$0", 1, [], []));
},
 get$isSetter: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isSetter", "isSetter$0", 1, [], []));
},
 get$Polyline: function() {
  return this.noSuchMethod$1($.createInvocationMirror("Polyline", "Polyline$0", 1, [], []));
},
 get$initialLat: function() {
  return this.noSuchMethod$1($.createInvocationMirror("initialLat", "initialLat$0", 1, [], []));
},
 get$_workerId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_workerId", "_workerId$0", 1, [], []));
},
 get$_elementid: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_elementid", "_elementid$0", 1, [], []));
},
 get$_serialized: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_serialized", "_serialized$0", 1, [], []));
},
 set$_mapFeature: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_mapFeature=", "_mapFeature=$1", 2, [$0], []));
},
 set$nextIsolateId: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId=", "nextIsolateId=$1", 2, [$0], []));
},
 set$_liblib3$_map: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_map=", "_map=$1", 2, [$0], []));
},
 set$_previous: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_previous=", "_previous=$1", 2, [$0], []));
},
 set$display: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("display=", "display=$1", 2, [$0], []));
},
 set$_zoom: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_zoom=", "_zoom=$1", 2, [$0], []));
},
 set$text: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("text=", "text=$1", 2, [$0], []));
},
 set$mouseoverHandler: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("mouseoverHandler=", "mouseoverHandler=$1", 2, [$0], []));
},
 set$innerHtml: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("innerHtml=", "innerHtml=$1", 2, [$0], []));
},
 set$currentContext: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("currentContext=", "currentContext=$1", 2, [$0], []));
},
 set$innerHTML: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("innerHTML=", "innerHTML=$1", 2, [$0], []));
},
 set$moveendHandler: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("moveendHandler=", "moveendHandler=$1", 2, [$0], []));
},
 set$mouseoutHandler: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("mouseoutHandler=", "mouseoutHandler=$1", 2, [$0], []));
},
 set$value: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("value=", "value=$1", 2, [$0], []));
},
 set$clickHandler: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("clickHandler=", "clickHandler=$1", 2, [$0], []));
},
 set$rootContext: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("rootContext=", "rootContext=$1", 2, [$0], []));
},
 set$_next: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_next=", "_next=$1", 2, [$0], []));
},
 set$length: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("length=", "length=$1", 2, [$0], []));
},
 set$_featureLayerGroup: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_featureLayerGroup=", "_featureLayerGroup=$1", 2, [$0], []));
},
 set$type: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("type=", "type=$1", 2, [$0], []));
},
 set$_popup: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_popup=", "_popup=$1", 2, [$0], []));
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element>",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 map$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    t1.addLast$1(other, f.call$1(entry.get$_element()));
  }
  return other;
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"":"Object;_backingMap>",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $._HashSetImpl_forEach_anon(f));
},
 map$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_map_anon(result, f));
  return result;
},
 filter$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_filter_anon(result, f));
  return result;
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CONSTANT3)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout1(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout1: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CONSTANT3);
},
 _advance$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = $.index(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CONSTANT3);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_liblib$_length",
 get$length: function() {
  return this._liblib$_length;
},
 get$isEmpty: function() {
  return $.eq(this._liblib$_length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._liblib$_length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._liblib$_length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._liblib$_length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._liblib$_length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._liblib$_length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
},
 removeRange$2: function(receiver, a0, a1) {
  return receiver.removeRange$2(a0, a1);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 abs$0: function(receiver) {
  return receiver.abs$0();
},
 concat$1: function(receiver, a0) {
  return receiver.concat$1(a0);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 map$1: function(receiver, a0) {
  return receiver.map$1(a0);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 startsWith$1: function(receiver, a0) {
  return receiver.startsWith$1(a0);
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
},
 is$Function: true
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CONSTANT0.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 map$1: function(receiver, f) {
  return $.Collections_map(receiver, [], f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 removeRange$2: function(receiver, start, length$) {
  var receiverLength, t1, t2;
  $.checkGrowable(receiver, "removeRange");
  if ($.eqB(length$, 0))
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.CONSTANT0.set$length(receiver, t2);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 concat$1: function(receiver, other) {
  return receiver + other;
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 startsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = other.length;
  if (otherLength > receiver.length)
    return false;
  return other == receiver.substring(0, otherLength);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.AbstractWorkerEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.ApplicationCacheEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.BatteryManagerEvents = {"":"Events;_ptr"
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.Console = {"":"Object;",
 get$_isConsoleDefined: function() {
  return typeof console != 'undefined';
},
 debug$1: function(arg) {
  return this.get$_isConsoleDefined() === true ? console.debug(arg) : null;
},
 error$1: function(arg) {
  return this.get$_isConsoleDefined() === true ? console.error(arg) : null;
},
 get$error: function() {
  return new $.BoundClosure(this, 'error$1');
},
 log$1: function(arg) {
  return this.get$_isConsoleDefined() === true ? console.log(arg) : null;
}
};

$$.DedicatedWorkerContextEvents = {"":"WorkerContextEvents;_ptr",
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._ChildrenElementList = {"":"Object;_liblib2$_element>,_childElements",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      output = env2;
      len = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 get$isEmpty: function() {
  return this._liblib2$_element.firstElementChild == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._liblib2$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._liblib2$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib2$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._liblib2$_element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 clear$0: function() {
  this._liblib2$_element.textContent = "";
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._liblib2$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib2$_element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 contains$1: function(element) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_liblib2$_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib2$_list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout2(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout2: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._liblib2$_list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() {
  return this.get$reset().call$0();
}
};

$$.EventSourceEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FileReaderEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.FileWriterEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.HttpRequestEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.HttpRequestUploadEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() {
  return this.get$reset().call$0();
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$.MediaStreamEvents = {"":"Events;_ptr"
};

$$.MediaStreamTrackEvents = {"":"Events;_ptr"
};

$$.MediaStreamTrackListEvents = {"":"Events;_ptr"
};

$$.MessagePortEvents = {"":"Events;_ptr",
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 operator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  return $.index(this._this.childNodes, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"":"Events;_ptr",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() {
  return this.get$close().call$0();
},
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.PeerConnection00Events = {"":"Events;_ptr",
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.RtcDataChannelEvents = {"":"Events;_ptr",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() {
  return this.get$close().call$0();
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.RtcPeerConnectionEvents = {"":"Events;_ptr",
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.SharedWorkerContextEvents = {"":"WorkerContextEvents;_ptr"
};

$$.SpeechRecognitionEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$start: function() {
  return this.operator$index$1("start");
},
 start$0: function() {
  return this.get$start().call$0();
}
};

$$.TextTrackEvents = {"":"Events;_ptr"
};

$$.TextTrackCueEvents = {"":"Events;_ptr"
};

$$.TextTrackListEvents = {"":"Events;_ptr"
};

$$.WebSocketEvents = {"":"Events;_ptr",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() {
  return this.get$close().call$0();
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.WorkerEvents = {"":"AbstractWorkerEvents;_ptr",
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.WorkerContextEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$._AttributeMap = {"":"Object;_liblib2$_element>",
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, len, i;
  attributes = this._liblib2$_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      len = env1;
      attributes = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib2$_element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          keys.push($.index(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$values: function() {
  var attributes, values, len, i;
  attributes = this._liblib2$_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  values = $.List_List(null);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      values.push(attributes[i].get$value());
    }
  }
  return values;
},
 get$values$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      values = env2;
      len = env1;
      attributes = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib2$_element.attributes;
    case 1:
      state0 = 0;
      values = $.List_List(null);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, values, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          values.push($.index(attributes, i).get$value());
      return values;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_liblib2$_element",
 containsKey$1: function(key) {
  return this._liblib2$_element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._liblib2$_element.$$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._liblib2$_element.$$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._liblib2$_element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$._JsSerializer = {"":"_Serializer;_nextFreeRefId,_visited",
 visitSendPortSync$1: function(x) {
  if (!!x.is$_JsSendPortSync)
    return ["sendport", "nativejs", x._id];
  if (!!x.is$_LocalSendPortSync)
    return this.visitLocalSendPortSync$1(x);
  if (!!x.is$_RemoteSendPortSync)
    return ["sendport", "dart", x._isolateId, x._portId];
  throw $.$$throw("Unknown port type " + $.S(x));
},
 visitLocalSendPortSync$1: function(x) {
  return ["sendport", "dart", $.ReceivePortSync__isolateId(), x._receivePort._portId];
},
 visitSendPort$1: function(x) {
  throw $.$$throw($.UnimplementedError$("Asynchronous send port not yet implemented."));
}
};

$$._JsDeserializer = {"":"_Deserializer;_deserialized",
 deserializeSendPort$1: function(x) {
  var tag = $.index(x, 1);
  switch (tag) {
    case "nativejs":
      return $._JsSendPortSync$($.index(x, 2));
    case "dart":
      return $.ReceivePortSync__lookup($.index(x, 2), $.index(x, 3));
    default:
      throw $.$$throw("Illegal SendPortSync type: " + $.S(tag));
  }
}
};

$$._JsSendPortSync = {"":"Object;_id>",
 callSync$1: function(message) {
  var serialized, result;
  serialized = $._JsSerializer$().traverse$1(message);
  result = ReceivePortSync.dispatchCall(this._id, serialized);
  return $._JsDeserializer$().deserialize$1(result);
},
 is$_JsSendPortSync: true,
 is$SendPortSync: true
};

$$._RemoteSendPortSync = {"":"Object;_isolateId>,_portId>",
 callSync$1: function(message) {
  var serialized, result;
  serialized = $._JsSerializer$().traverse$1(message);
  result = $._RemoteSendPortSync__call(this._isolateId, this._portId, serialized);
  return $._JsDeserializer$().deserialize$1(result);
},
 is$_RemoteSendPortSync: true,
 is$SendPortSync: true
};

$$._LocalSendPortSync = {"":"Object;_receivePort>",
 callSync$1: function(message) {
  var t1, copy, result;
  t1 = $._JsSerializer$().traverse$1(message);
  copy = $._JsDeserializer$().deserialize$1(t1);
  result = this._receivePort._callback$1(copy);
  t1 = $._JsSerializer$().traverse$1(result);
  return $._JsDeserializer$().deserialize$1(t1);
},
 is$_LocalSendPortSync: true,
 is$SendPortSync: true
};

$$.ReceivePortSync = {"":"Object;_portId>,_callback>,_listener",
 _callback$1: function(arg0) {
  return this._callback.call$1(arg0);
},
 _callback$2: function(arg0, arg1) {
  return this._callback.call$2(arg0, arg1);
},
 get$_listenerName: function() {
  return $.ReceivePortSync__getListenerName($.ReceivePortSync__isolateId(), this._portId);
},
 receive$1: function(callback) {
  var t1;
  this._callback = callback;
  if (this._listener == null) {
    this._listener = new $.ReceivePortSync_receive_anon(this);
    t1 = $.index($.window().get$on(), this.get$_listenerName());
    $.getInterceptor$JSArray(t1).add$1(t1, this._listener);
  }
},
 close$0: function() {
  $.ReceivePortSync__portMap.remove$1(this._portId);
  if (!(this._listener == null))
    $.index($.window().get$on(), this.get$_listenerName()).remove$1(this._listener);
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 toSendPort$0: function() {
  return $._LocalSendPortSync$_internal(this);
},
 ReceivePortSync$0: function() {
  if ($.ReceivePortSync__portIdCount == null) {
    $.ReceivePortSync__portIdCount = 0;
    $.ReceivePortSync__portMap = $.Map_Map();
  }
  var t1 = $.ReceivePortSync__portIdCount;
  $.ReceivePortSync__portIdCount = $.add(t1, 1);
  this._portId = t1;
  $.indexSet($.ReceivePortSync__portMap, this._portId, this);
}
};

$$._MessageTraverserVisitedMap = {"":"Object;",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"":"Object;",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
}
};

$$._Serializer = {"":"_MessageTraverser;",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = this._visited.operator$index$1(list);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  this._visited.operator$indexSet$2(list, id);
  return ["list", id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = this._visited.operator$index$1(map);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  this._visited.operator$indexSet$2(map, id);
  return ["map", id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $.List_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      len = $.getInterceptor$JSStringJSArray(list).get$length(list);
    case 2:
      var list, len, result, i, t1;
      state0 = 0;
      result = $.List_List(len);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._dispatch$1($.index(list, i));
        if (i >= result.length)
          throw $.ioore(i);
        result[i] = t1;
      }
      return result;
  }
}
};

$$._Deserializer = {"":"Object;",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case "ref":
      return this._deserializeRef$1(x);
    case "list":
      return this._deserializeList$1(x);
    case "map":
      return this._deserializeMap$1(x);
    case "sendport":
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      id = env1;
      dartList = env0;
      break;
    case 2:
      len = env1;
      dartList = env0;
      break;
  }
  switch (state0) {
    case 0:
      id = $.index(x, 1);
      dartList = $.index(x, 2);
    case 1:
      state0 = 0;
      $.indexSet(this._deserialized, id, dartList);
      len = $.getInterceptor$JSStringJSArray(dartList).get$length(dartList);
    case 2:
      var id, dartList, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
      return dartList;
  }
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
    case 3:
      keys = env3;
      result = env2;
      len = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      state0 = 0;
      len = $.getInterceptor$JSStringJSArray(keys).get$length(keys);
    case 3:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw("Unexpected serialized object");
}
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 close$0: function() {
  return this._window.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
}
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.FilteredElementList = {"":"Object;_node,_childNodes",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 get$add: function() {
  return new $.BoundClosure(this, 'add$1');
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.DatabaseEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.OpenDBRequestEvents = {"":"RequestEvents;_ptr"
};

$$.RequestEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.TransactionEvents = {"":"Events;_ptr",
 get$complete: function() {
  return this.operator$index$1("complete");
},
 complete$1: function(arg0) {
  return this.get$complete().call$1(arg0);
},
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.VersionChangeRequestEvents = {"":"RequestEvents;_ptr"
};

$$._Manager = {"":"Object;nextIsolateId=,currentManagerId>,nextManagerId,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  var t1 = this.isolates;
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map();
  this.managers = $.Map_Map();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"":"Object;id>,ports>,isolateStatics",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  var t1;
  this.ports.remove$1(portId);
  t1 = this.ports;
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map();
  this.initGlobals$0();
}
};

$$._EventLoop = {"":"Object;events",
 enqueue$3: function(isolate, fn, msg) {
  var t1 = this.events;
  $.getInterceptor$JSArray(t1).addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$, t1, t2;
  event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else {
      if (!($._globalState().get$rootContext() == null))
        if ($._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true)
          if ($._globalState().get$fromCommandLine() === true) {
            t1 = $._globalState().get$rootContext().get$ports();
            t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
            t1 = t2;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
    }
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"":"Object;isolate,fn,message>",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"":"Object;",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"":"Object;_liblib4$_isolateId>",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer();
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(port, completer));
  return completer.get$future();
},
 is$Function: true,
 is$SendPort: true
};

$$._NativeJsSendPort = {"":"_BaseSendPort;_liblib4$_receivePort>,_liblib4$_isolateId",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, replyTo, message));
},
 send$1: function(message) {
  return this.send$2(message, null);
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._liblib4$_receivePort, other._liblib4$_receivePort);
},
 get$hashCode: function() {
  return this._liblib4$_receivePort.get$_liblib4$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"":"_BaseSendPort;_workerId>,_receivePortId,_liblib4$_isolateId",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
},
 send$1: function(message) {
  return this.send$2(message, null);
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._liblib4$_isolateId, other._liblib4$_isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._liblib4$_isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"":"Object;_liblib4$_id>,_liblib4$_callback>",
 _liblib4$_callback$1: function(arg0) {
  return this._liblib4$_callback.call$1(arg0);
},
 _liblib4$_callback$2: function(arg0, arg1) {
  return this._liblib4$_callback.call$2(arg0, arg1);
},
 receive$1: function(onMessage) {
  this._liblib4$_callback = onMessage;
},
 close$0: function() {
  this._liblib4$_callback = null;
  $._globalState().get$currentContext().unregister$1(this._liblib4$_id);
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._liblib4$_id, this);
}
};

$$._PendingSendPortFinder = {"":"_MessageTraverser0;ports>,_liblib4$_visited",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._liblib4$_visited, list) == null))
    return;
  $.indexSet(this._liblib4$_visited, list, true);
  $.getInterceptor$JSArray(list).forEach$1(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  var t1;
  if (!($.index(this._liblib4$_visited, map) == null))
    return;
  $.indexSet(this._liblib4$_visited, map, true);
  t1 = map.get$values();
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._liblib4$_port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._liblib4$_visited = $._JsVisitedMap$();
}
};

$$._JsSerializer0 = {"":"_Serializer0;_liblib4$_nextFreeRefId,_liblib4$_visited",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ["sendport", x._workerId, x._liblib4$_isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw("Illegal underlying port " + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ["sendport", $._globalState().get$currentManagerId(), port._liblib4$_isolateId, port._liblib4$_receivePort.get$_liblib4$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._liblib4$_port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
},
 _JsSerializer$0: function() {
  this._liblib4$_visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"":"_Copier;_liblib4$_visited",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._liblib4$_receivePort, port._liblib4$_isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._liblib4$_isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._liblib4$_port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
},
 _JsCopier$0: function() {
  this._liblib4$_visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer0 = {"":"_Deserializer0;_liblib4$_deserialized",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"":"Object;tagged",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 operator$indexSet$2: function(object, info) {
  var t1 = this.tagged;
  $.getInterceptor$JSArray(t1).add$1(t1, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  this.tagged = $.List_List(null);
},
 cleanup$0: function() {
  var t1, length$, i;
  t1 = this.tagged;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap0 = {"":"Object;",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser0 = {"":"Object;",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._liblib4$_visited.reset$0();
  result = null;
  try {
    result = this._liblib4$_dispatch$1(x);
  } finally {
    this._liblib4$_visited.cleanup$0();
  }
  return result;
},
 _liblib4$_dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
}
};

$$._Copier = {"":"_MessageTraverser0;",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._liblib4$_visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $.List_List(len);
  $.indexSet(this._liblib4$_visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._liblib4$_dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      copy = $.index(this._liblib4$_visited, list);
      if (!(copy == null))
        return copy;
      len = $.getInterceptor$JSStringJSArray(list).get$length(list);
    case 2:
      var list, copy, len, i, t1;
      state0 = 0;
      copy = $.List_List(len);
      $.indexSet(this._liblib4$_visited, list, copy);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._liblib4$_dispatch$1($.index(list, i));
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
  }
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_0 = $.index(this._liblib4$_visited, map);
  t2 = t1.copy_0;
  if (!(t2 == null))
    return t2;
  t1.copy_0 = $.Map_Map();
  $.indexSet(this._liblib4$_visited, map, t1.copy_0);
  map.forEach$1(new $._Copier_visitMap_anon(t1, this));
  return t1.copy_0;
}
};

$$._Serializer0 = {"":"_MessageTraverser0;",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._liblib4$_visited, list);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._liblib4$_nextFreeRefId;
  this._liblib4$_nextFreeRefId = id + 1;
  $.indexSet(this._liblib4$_visited, list, id);
  return ["list", id, this._liblib4$_serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._liblib4$_visited, map);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._liblib4$_nextFreeRefId;
  this._liblib4$_nextFreeRefId = id + 1;
  $.indexSet(this._liblib4$_visited, map, id);
  return ["map", id, this._liblib4$_serializeList$1(map.get$keys()), this._liblib4$_serializeList$1(map.get$values())];
},
 _liblib4$_serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._liblib4$_serializeList$1$bailout(1, list);
  len = list.length;
  result = $.List_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._liblib4$_dispatch$1(list[i]);
  }
  return result;
},
 _liblib4$_serializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      len = $.getInterceptor$JSStringJSArray(list).get$length(list);
    case 2:
      var list, len, result, i, t1;
      state0 = 0;
      result = $.List_List(len);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._liblib4$_dispatch$1($.index(list, i));
        if (i >= result.length)
          throw $.ioore(i);
        result[i] = t1;
      }
      return result;
  }
}
};

$$._Deserializer0 = {"":"Object;",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._liblib4$_deserialized = $.HashMap_HashMap();
  return this._liblib4$_deserializeHelper$1(x);
},
 _liblib4$_deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case "ref":
      return this._liblib4$_deserializeRef$1(x);
    case "list":
      return this._liblib4$_deserializeList$1(x);
    case "map":
      return this._liblib4$_deserializeMap$1(x);
    case "sendport":
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _liblib4$_deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._liblib4$_deserialized, id);
},
 _liblib4$_deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._liblib4$_deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._liblib4$_deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._liblib4$_deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _liblib4$_deserializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      id = env1;
      dartList = env0;
      break;
    case 2:
      len = env1;
      dartList = env0;
      break;
  }
  switch (state0) {
    case 0:
      id = $.index(x, 1);
      dartList = $.index(x, 2);
    case 1:
      state0 = 0;
      $.indexSet(this._liblib4$_deserialized, id, dartList);
      len = $.getInterceptor$JSStringJSArray(dartList).get$length(dartList);
    case 2:
      var id, dartList, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(dartList, i, this._liblib4$_deserializeHelper$1($.index(dartList, i)));
      return dartList;
  }
},
 _liblib4$_deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._liblib4$_deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._liblib4$_deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._liblib4$_deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._liblib4$_deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._liblib4$_deserializeHelper$1(values[i]));
  }
  return result;
},
 _liblib4$_deserializeMap$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
    case 3:
      keys = env3;
      result = env2;
      len = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._liblib4$_deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      state0 = 0;
      len = $.getInterceptor$JSStringJSArray(keys).get$length(keys);
    case 3:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._liblib4$_deserializeHelper$1($.index(keys, i)), this._liblib4$_deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw("Unexpected serialized object");
}
};

$$.JsonUnsupportedObjectError = {"":"Object;unsupportedObject,cause",
 toString$0: function() {
  if (!(this.cause == null))
    return "Calling toJson method on object failed.";
  else
    return "Object toJson method returns non-serializable value.";
}
};

$$._JsonParser = {"":"Object;json,length>,position",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1("Junk at the end of JSON input");
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1("Nothing to parse");
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2("null", null);
    case 102:
      return this.expectKeyword$2("false", false);
    case 116:
      return this.expectKeyword$2("true", true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1("Unexpected token");
  }
},
 expectKeyword$2: function(word, value) {
  var i;
  for (i = 0; i < word.length; ++i) {
    if (!$.eqB(this.char$0(), $.CONSTANT2.charCodeAt$1(word, i)))
      this.error$1("Expected keyword '" + word + "'");
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object, key, t1;
  object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  var key;
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 93)) {
    for (; true;) {
      list.push(this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 93))
      this.error$1("Expected ']' at end of list");
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function(exception) {
  var charCodes, t1, t2, t3, c, codeString;
  if (!$.eqB(this.token$0(), 34))
    this.error$1("Expected string literal");
  this.position = $.add(this.position, 1);
  charCodes = $.List_List(null);
  for (t1 = this.length, t2 = this.json, t3 = $.getInterceptor$JSString(t2); true;) {
    c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, t1))
        this.error$1("\\ at the end of input");
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), t1))
            this.error$1("Invalid unicode esacape sequence");
          codeString = t3.substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse("0x" + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1("Invalid unicode esacape sequence");
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1("Invalid esacape sequence in string literal");
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.String_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  var startPos, char$, isInt, t1, number;
  if (!$.eqB(this.token$0(), 45))
    this.error$1("Expected number literal");
  startPos = this.position;
  char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if ($.geB(char$, 48) && $.leB(char$, 57)) {
    char$ = this.nextChar$0();
    if (typeof char$ !== 'number')
      return this.parseNumber$0$bailout(1, startPos, char$);
    while (true) {
      if (!($.geB(char$, 48) && $.leB(char$, 57)))
        break;
      char$ = this.nextChar$0();
    }
  } else
    this.error$1("Expected digit when parsing number");
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(2, startPos, char$);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else {
      this.error$1("Expected digit following comma");
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(3, char$, startPos);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else
      this.error$1("Expected digit following 'e' or 'E'");
  }
  t1 = this.json;
  number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 parseNumber$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      char$ = env1;
      startPos = env0;
      break;
    case 2:
      char$ = env1;
      startPos = env0;
      break;
    case 3:
      startPos = env1;
      char$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (!$.eqB(this.token$0(), 45))
        this.error$1("Expected number literal");
      startPos = this.position;
      char$ = this.char$0();
      if (char$ === 45)
        char$ = this.nextChar$0();
    case 1:
      if (state0 === 0 && char$ === 48)
        char$ = this.nextChar$0();
      else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 1 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 1:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
              }
            else
              this.error$1("Expected digit when parsing number");
        }
    case 2:
      if (state0 === 2 || state0 === 0 && char$ === 46)
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
          case 2:
            if (state0 === 2 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 2:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else {
              this.error$1("Expected digit following comma");
              isInt = true;
            }
        }
      else
        isInt = true;
    case 3:
      var startPos, char$, isInt, t1, number;
      if (state0 === 3 || state0 === 0 && (char$ === 101 || char$ === 69))
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
            if (char$ === 45 || char$ === 43)
              char$ = this.nextChar$0();
          case 3:
            if (state0 === 3 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 3:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else
              this.error$1("Expected digit following 'e' or 'E'");
        }
      t1 = this.json;
      number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
      if (isInt)
        return $.int_parse(number);
      else
        return $.double_parse(number);
  }
},
 char$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1("Unexpected end of JSON stream");
  t1 = this.json;
  return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = this.length;
    case 2:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1("Unexpected end of JSON stream");
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 nextChar$0: function() {
  var t1, t3, t2;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  t2 = this.json;
  return $.getInterceptor$JSString(t2).charCodeAt$1(t2, t1);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      t3 = this.length;
    case 3:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 token$0: function() {
  var t1, t2, t3, t4, char$, token;
  t1 = this.json;
  t2 = $.getInterceptor$JSString(t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.token$0$bailout(1, t2, t3, t1);
  for (; true;) {
    t4 = this.position;
    if (typeof t4 !== 'number')
      return this.token$0$bailout(2, t4, t2, t3, t1);
    if (t4 >= t3)
      return;
    char$ = t2.charCodeAt$1(t1, t4);
    t4 = $._JsonParser_tokens;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.token$0$bailout(3, t2, t3, char$, t1, t4);
    if (char$ !== (char$ | 0))
      throw $.iae(char$);
    if (char$ < 0 || char$ >= t4.length)
      throw $.ioore(char$);
    token = t4[char$];
    if (token === 32) {
      t4 = this.position;
      if (typeof t4 !== 'number')
        return this.token$0$bailout(4, t2, t3, t1, t4);
      this.position = t4 + 1;
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 token$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env3;
      t3 = env2;
      t2 = env1;
      t4 = env0;
      break;
    case 3:
      t4 = env4;
      t1 = env3;
      char$ = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 4:
      t4 = env3;
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.json;
      t2 = $.getInterceptor$JSString(t1);
      t3 = this.length;
    case 1:
      state0 = 0;
    default:
      var t1, t2, t3, t4, char$, token;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t4 = this.position;
                  case 2:
                    state0 = 0;
                    if ($.geB(t4, t3))
                      return;
                    char$ = t2.charCodeAt$1(t1, this.position);
                    t4 = $._JsonParser_tokens;
                  case 3:
                    state0 = 0;
                    token = $.index(t4, char$);
                  case 4:
                    if (state0 === 4 || state0 === 0 && token === 32)
                      switch (state0) {
                        case 0:
                          t4 = this.position;
                        case 4:
                          state0 = 0;
                          this.position = $.add(t4, 1);
                          break c$0;
                      }
                    if (token == null)
                      return 0;
                    return token;
                }
              }
          }
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 get$error: function() {
  return new $.BoundClosure(this, 'error$1');
},
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $.List_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$._JsonStringifier = {"":"Object;sb>,seen",
 checkCycle$1: function(object) {
  var t1, t2, i, t3;
  for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    if (t3 == null ? object == null : t3 === object)
      throw $.$$throw("Cyclic structure");
  }
  t1.push(object);
},
 stringifyValue$1: function(object, exception) {
  var customJson, t1, e;
  if (this.stringifyJsonValue$1(object) !== true) {
    this.checkCycle$1(object);
    try {
      customJson = object.toJson$0();
      if (this.stringifyJsonValue$1(customJson) !== true)
        throw $.$$throw($.JsonUnsupportedObjectError$(object));
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
    }

  }
},
 stringifyJsonValue$1: function(object) {
  var t1, t2, t3, i;
  t1 = {};
  if (typeof object === 'number') {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT1.toString$0(object));
    return true;
  } else if (object === true) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "true");
    return true;
  } else if (object === false) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "false");
    return true;
  } else if (object == null) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "null");
    return true;
  } else if (typeof object === 'string') {
    t1 = this.sb;
    t2 = $.getInterceptor$JSArray(t1);
    t2.add$1(t1, "\"");
    $._JsonStringifier_escape(t1, object);
    t2.add$1(t1, "\"");
    return true;
  } else if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.stringifyJsonValue$1$bailout(1, object);
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "[");
    if (object.length > 0) {
      this.stringifyValue$1(object[0]);
      for (i = 1; i < object.length; ++i) {
        t3.add$1(t2, ",");
        if (i >= object.length)
          throw $.ioore(i);
        this.stringifyValue$1(object[i]);
      }
    }
    t3.add$1(t2, "]");
    t1 = this.seen;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
    return true;
  } else if (typeof object === 'object' && object !== null && object.is$Map()) {
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "{");
    t1.first_0 = true;
    object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
    t3.add$1(t2, "}");
    t2 = this.seen;
    if (0 >= t2.length)
      throw $.ioore(0);
    t2.pop();
    return true;
  } else
    return false;
},
 stringifyJsonValue$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
    case 1:
      var t1, t2, object, t3, i;
      if (state0 === 0 && typeof object === 'number') {
        t1 = this.sb;
        $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT1.toString$0(object));
        return true;
      } else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && object === true) {
              t1 = this.sb;
              $.getInterceptor$JSArray(t1).add$1(t1, "true");
              return true;
            } else
              switch (state0) {
                case 0:
                case 1:
                  if (state0 === 0 && object === false) {
                    t1 = this.sb;
                    $.getInterceptor$JSArray(t1).add$1(t1, "false");
                    return true;
                  } else
                    switch (state0) {
                      case 0:
                      case 1:
                        if (state0 === 0 && object == null) {
                          t1 = this.sb;
                          $.getInterceptor$JSArray(t1).add$1(t1, "null");
                          return true;
                        } else
                          switch (state0) {
                            case 0:
                            case 1:
                              if (state0 === 0 && typeof object === 'string') {
                                t1 = this.sb;
                                t2 = $.getInterceptor$JSArray(t1);
                                t2.add$1(t1, "\"");
                                $._JsonStringifier_escape(t1, object);
                                t2.add$1(t1, "\"");
                                return true;
                              } else
                                switch (state0) {
                                  case 0:
                                  case 1:
                                    if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
                                      switch (state0) {
                                        case 0:
                                        case 1:
                                          state0 = 0;
                                          this.checkCycle$1(object);
                                          t2 = this.sb;
                                          t3 = $.getInterceptor$JSArray(t2);
                                          t3.add$1(t2, "[");
                                          t1 = $.getInterceptor$JSStringJSArray(object);
                                          if ($.gtB(t1.get$length(object), 0)) {
                                            this.stringifyValue$1($.index(object, 0));
                                            for (i = 1; $.ltB(i, t1.get$length(object)); ++i) {
                                              t3.add$1(t2, ",");
                                              this.stringifyValue$1($.index(object, i));
                                            }
                                          }
                                          t3.add$1(t2, "]");
                                          t1 = this.seen;
                                          if (0 >= t1.length)
                                            throw $.ioore(0);
                                          t1.pop();
                                          return true;
                                      }
                                    else if (typeof object === 'object' && object !== null && object.is$Map()) {
                                      this.checkCycle$1(object);
                                      t2 = this.sb;
                                      t3 = $.getInterceptor$JSArray(t2);
                                      t3.add$1(t2, "{");
                                      t1.first_0 = true;
                                      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                      t3.add$1(t2, "}");
                                      t2 = this.seen;
                                      if (0 >= t2.length)
                                        throw $.ioore(0);
                                      t2.pop();
                                      return true;
                                    } else
                                      return false;
                                }
                          }
                    }
              }
        }
  }
}
};

$$.ElementInstanceEvents = {"":"Events;_ptr",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() {
  return this.get$reset().call$0();
}
};

$$.AudioContextEvents = {"":"Events;_ptr",
 get$complete: function() {
  return this.operator$index$1("complete");
},
 complete$1: function(arg0) {
  return this.get$complete().call$1(arg0);
}
};

$$.ScriptProcessorNodeEvents = {"":"Events;_ptr"
};

$$.LeafletMap = {"":"Object;_elementid>,_liblib3$_map=,_featureLayerGroup=,_popup=,_zoom<",
 LeafletMap$3$height$width: function(elementid, height, width) {
  this._elementid = elementid;
  if (!(width == null))
    this._width = width;
  if (!(height == null))
    this._height = height;
  else
    this._height = "300px";
}
};

$$.OpenStreetMap = {"":"LeafletMap;initialZoom>,initialLat>,initialLon>,_elementid,_width,_height,_liblib3$_map,_featureLayerGroup,_popup,_zoom",
 loadMap$0: function() {
  $.scoped(new $.OpenStreetMap_loadMap_anon("Map-Data <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-By-SA</a> by <a href=\"http://openstreetmap.org/\">OpenStreetMap</a> contributors target=\"_blank\">MapQuest</a>, <a href=\"http://www.openstreetmap.org/\" target=\"_blank\">OpenStreetMap</a> and contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\" target=\"_blank\">CC-BY-SA</a>", ["otile1", "otile2", "otile3", "otile4"], this, "http://{s}.tiles.vesseltracker.com/vesseltracker/{z}/{x}/{y}.png"));
},
 moveendEvent$1: function(e) {
  $.changeRegistration();
},
 get$moveendEvent: function() {
  return new $.BoundClosure(this, 'moveendEvent$1');
},
 getBounds$0: function() {
  var t1 = {};
  t1.south_0 = null;
  t1.west_1 = null;
  t1.north_2 = null;
  t1.east_3 = null;
  $.scoped(new $.OpenStreetMap_getBounds_anon(t1, this));
  return [t1.south_0, t1.west_1, t1.north_2, t1.east_3];
},
 getZoom$0: function() {
  $.scoped(new $.OpenStreetMap_getZoom_anon(this));
  return this._zoom;
},
 clearFeatureLayer$0: function() {
  $.scoped(new $.OpenStreetMap_clearFeatureLayer_anon(this));
},
 closePopup$0: function() {
  $.scoped(new $.OpenStreetMap_closePopup_anon(this));
},
 openPopup$1: function(popup) {
  $.scoped(new $.OpenStreetMap_openPopup_anon(popup, this));
},
 OpenStreetMap$4$height$width: function(elementid, mapOptions, height, width) {
  this.initialZoom = $.index(mapOptions, 1);
  this.initialLat = $.index(mapOptions, 0).get$latitude();
  this.initialLon = $.index(mapOptions, 0).get$longitude();
}
};

$$.Popup = {"":"Object;_popup=",
 addTo$1: function(map) {
  map.closePopup$0();
  map.openPopup$1(this._popup);
},
 Popup$3: function(popupOrigin, content$, options) {
  $.scoped(new $.anon3(content$, options, popupOrigin, this));
}
};

$$.MapFeature = {"":"Object;_mapFeature=",
 addListeners$1: function(mmsi) {
  var t1, t2, t3;
  t1 = new $.MapFeature_addListeners_onClickHandler(mmsi);
  t2 = new $.MapFeature_addListeners_onMouseoutHandler();
  t3 = new $.MapFeature_addListeners_onMouseoverHandler(mmsi);
  t1 = $.Callback$many(t1);
  $.context().set$clickHandler(t1);
  t3 = $.Callback$many(t3);
  $.context().set$mouseoverHandler(t3);
  t2 = $.Callback$many(t2);
  $.context().set$mouseoutHandler(t2);
  this._mapFeature.on$2("click", $.context().get$clickHandler());
  this._mapFeature.on$2("mouseover", $.context().get$mouseoverHandler());
  this._mapFeature.on$2("mouseout", $.context().get$mouseoutHandler());
},
 addTo$2: function(map, featureLayer) {
  $.scoped(new $.MapFeature_addTo_anon(this, featureLayer, map));
}
};

$$.Polyline = {"":"MapFeature;_mapFeature",
 Polyline$2: function(vectorPoints, options) {
  $.scoped(new $.anon5(vectorPoints, this, options));
}
};

$$.AnimatedPolygon = {"":"MapFeature;_mapFeature",
 startAnimation$0: function() {
  $.scoped(new $.AnimatedPolygon_startAnimation_anon(this));
},
 stopAnimation$0: function() {
  $.scoped(new $.AnimatedPolygon_stopAnimation_anon(this));
},
 AnimatedPolygon$3: function(vectorPoints, options, vmmsi) {
  $.scoped(new $.anon4(this, vectorPoints, options, vmmsi));
}
};

$$.CircleMarker = {"":"MapFeature;_mapFeature",
 clearLayers$0: function() {
  $.scoped(new $.CircleMarker_clearLayers_anon());
},
 CircleMarker$3: function(vectorPoint, options, vMmsi) {
  $.scoped(new $.anon2(vMmsi, this, vectorPoint, options));
}
};

$$.Marker = {"":"MapFeature;_mapFeature",
 addTo$2: function(map, featureLayer) {
  $.scoped(new $.Marker_addTo_anon(map, this, featureLayer));
},
 setIcon$1: function(icon) {
  $.scoped(new $.Marker_setIcon_anon(this, icon));
},
 Marker$4: function(latitude, longitude, tooltip, draggable) {
  $.scoped(new $.anon1(latitude, longitude, tooltip, draggable, this));
}
};

$$.Coord = {"":"Object;latitude>,longitude>"
};

$$.Icon = {"":"Object;imageURL>,dimension>"
};

$$.Dimension = {"":"Object;width>,height>"
};

$$.Callback = {"":"Object;_manualDispose,_liblib1$_id>,_liblib1$_callback>",
 _liblib1$_callback$1: function(arg0) {
  return this._liblib1$_callback.call$1(arg0);
},
 _liblib1$_callback$2: function(arg0, arg1) {
  return this._liblib1$_callback.call$2(arg0, arg1);
},
 get$_serialized: function() {
  return ["funcref", this._liblib1$_id, $.get$_proxiedObjectTable().get$sendPort()];
},
 _initialize$1: function(manualDispose) {
  var t1;
  this._manualDispose = manualDispose;
  t1 = $.get$_proxiedObjectTable();
  this._liblib1$_id = $.getInterceptor$JSArray(t1).add$1(t1, this._liblib1$_callback);
  $.get$_proxiedObjectTable().globalize$1(this._liblib1$_id);
},
 Callback$many$1: function(f) {
  this._liblib1$_callback = f;
  this._initialize$1(true);
},
 is$Callback: true
};

$$.Proxy = {"":"Object;_port>,_liblib1$_id>",
 operator$index$1: function(arg) {
  return $.Proxy__forward(this, "[]", "method", [arg]);
},
 operator$indexSet$2: function(key, value) {
  return $.Proxy__forward(this, "[]=", "method", [key, value]);
},
 operator$eq$1: function(other) {
  var t1;
  if (this === other)
    t1 = true;
  else
    t1 = typeof other === 'object' && other !== null && !!other.is$Proxy && $._jsPortEquals.callSync$1([$._serialize(this), $._serialize(other)]) === true;
  return t1;
},
 noSuchMethod$1: function(invocation) {
  var member, args, t1, kind;
  member = invocation.get$memberName();
  args = invocation.get$positionalArguments();
  if (args == null)
    args = [];
  if (invocation.get$isGetter() === true) {
    t1 = $.getInterceptor$JSString(member);
    if (t1.startsWith$1(member, "get:") === true)
      member = t1.substring$1(member, 4);
    kind = "get";
  } else if (invocation.get$isSetter() === true) {
    t1 = $.getInterceptor$JSString(member);
    if (t1.endsWith$1(member, "=") === true)
      member = t1.substring$2(member, 0, $.sub(t1.get$length(member), 1));
    t1 = $.getInterceptor$JSString(member);
    if (t1.startsWith$1(member, "set:") === true)
      member = t1.substring$1(member, 4);
    kind = "set";
  } else {
    t1 = $.getInterceptor$JSString(member);
    if (t1.startsWith$1(member, "get:") === true) {
      member = t1.substring$1(member, 4);
      kind = "get";
    } else if (t1.startsWith$1(member, "set:") === true) {
      member = t1.substring$1(member, 4);
      kind = "set";
    } else
      kind = "method";
  }
  return $.Proxy__forward(this, member, kind, args);
},
 is$Proxy: true
};

$$._FunctionProxy = {"":"Proxy;_call,_port,_liblib1$_id",
 _FunctionProxy$_internal$2: function(port, id) {
  this._call = new $.anon0(id, port);
  $.indexSet($.get$_FunctionProxy__map(), this._call, this);
}
};

$$._ProxiedObjectTable = {"":"Object;_name,_nextId,_deletedCount,_registry>,_port>,_globalIds,_handleStack,_scopeIndices>",
 enterScope$0: function() {
  $.CONSTANT0.addLast$1(this._scopeIndices, this._handleStack.length);
},
 exitScope$0: function() {
  var t1, start, t2, t3, t4, i, t5;
  t1 = this._scopeIndices;
  if (0 >= t1.length)
    throw $.ioore(0);
  start = t1.pop();
  if (start !== (start | 0))
    return this.exitScope$0$bailout(1, start);
  for (t1 = this._registry, t2 = this._handleStack, t3 = this._globalIds, t4 = $.getInterceptor$JSStringJSArray(t3), i = start; t5 = t2.length, i < t5; ++i) {
    if (i < 0)
      throw $.ioore(i);
    if (t4.contains$1(t3, t2[i]) !== true) {
      if (i >= t2.length)
        throw $.ioore(i);
      t1.remove$1(t2[i]);
      this._deletedCount = this._deletedCount + 1;
    }
  }
  $.CONSTANT0.removeRange$2(t2, start, t5 - start);
},
 exitScope$0$bailout: function(state0, start) {
  var t1, t2, t3, t4, i, t5, t6;
  for (t1 = this._registry, t2 = this._handleStack, t3 = this._globalIds, t4 = $.getInterceptor$JSStringJSArray(t3), i = start; t5 = $.ltB(i, t2.length), t6 = t2.length, t5; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t6)
      throw $.ioore(i);
    if (t4.contains$1(t3, t2[i]) !== true) {
      if (i >= t2.length)
        throw $.ioore(i);
      t1.remove$1(t2[i]);
      this._deletedCount = this._deletedCount + 1;
    }
  }
  if (typeof start !== 'number')
    throw $.iae(start);
  $.CONSTANT0.removeRange$2(t2, start, t6 - start);
},
 globalize$1: function(id) {
  var t1 = this._globalIds;
  return $.getInterceptor$JSArray(t1).add$1(t1, id);
},
 add$1: function(x) {
  var t1, t2, id;
  if (this._scopeIndices.length === 0)
    throw $.$$throw("Must be inside scope to allocate.");
  t1 = this._name + "-";
  t2 = this._nextId;
  this._nextId = t2 + 1;
  id = t1 + $.S(t2);
  $.indexSet(this._registry, id, x);
  $.CONSTANT0.addLast$1(this._handleStack, id);
  return id;
},
 get$1: function(id) {
  return $.index(this._registry, id);
},
 get$sendPort: function() {
  return this._port.toSendPort$0();
},
 _ProxiedObjectTable$0: function() {
  this._port.receive$1(new $.anon(this));
}
};

$$.initWebSocket_anon = {"":"Closure;",
 call$1: function(e) {
  $.window().get$console().log$1("Connected");
  $.changeRegistration();
}
};

$$.initWebSocket_anon0 = {"":"Closure;box_0,retrySeconds_1",
 call$1: function(e) {
  var t1, t2, t3, t4;
  t1 = this.retrySeconds_1;
  t2 = "web socket closed, retrying in " + $.S(t1) + " seconds";
  $.window().get$console().log$1(t2);
  t2 = this.box_0;
  if (t2.encounteredError_0 !== true) {
    t3 = $.window();
    t4 = new $.initWebSocket__anon0(t1);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t3.setTimeout$2(t4, 1000 * t1);
  }
  t2.encounteredError_0 = true;
}
};

$$.initWebSocket__anon0 = {"":"Closure;retrySeconds_2",
 call$0: function() {
  return $.initWebSocket($.mul(this.retrySeconds_2, 2));
}
};

$$.initWebSocket_anon1 = {"":"Closure;box_0,retrySeconds_3",
 call$1: function(e) {
  var t1, t2, t3, t4;
  $.window().get$console().log$1("Error connecting to ws");
  t1 = this.box_0;
  if (t1.encounteredError_0 !== true) {
    t2 = $.window();
    t3 = this.retrySeconds_3;
    t4 = new $.initWebSocket__anon(t3);
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    t2.setTimeout$2(t4, 1000 * t3);
  }
  t1.encounteredError_0 = true;
}
};

$$.initWebSocket__anon = {"":"Closure;retrySeconds_4",
 call$0: function() {
  return $.initWebSocket($.mul(this.retrySeconds_4, 2));
}
};

$$.initWebSocket_anon2 = {"":"Closure;",
 call$1: function(e) {
  var t1, json, t2;
  t1 = "received message " + $.S(e.get$data());
  $.window().get$console().log$1(t1);
  json = $.JSON_parse(e.get$data());
  if ($.eqB($.index(json, "type"), "vesselsInBoundsEvent")) {
    t1 = $.index(json, "vessels");
    t2 = "vesselsInBoundsEvent: " + $.S($.getInterceptor$JSStringJSArray(t1).get$length(t1));
    $.window().get$console().log$1(t2);
    $.processVesselsInBounds($.index(json, "vessels"));
  }
}
};

$$.OpenStreetMap_loadMap_anon = {"":"Closure;osmAttrib_0,subDomains_1,this_2,tileURL_3",
 call$0: function() {
  var mapOptions, t1, t2, osm, mouseOptions, t3;
  mapOptions = $.map($.makeLiteralMap(["maxZoom", 18, "attribution", this.osmAttrib_0, "subdomains", this.subDomains_1]));
  t1 = $.context().get$L().get$Map();
  t2 = this.this_2;
  t2.set$_liblib3$_map($.Proxy_Proxy(t1, t2.get$_elementid(), $, $, $));
  t2.set$_featureLayerGroup($.Proxy_Proxy($.context().get$L().get$LayerGroup(), $, $, $, $));
  t2.get$_liblib3$_map().addLayer$1(t2.get$_featureLayerGroup());
  $.retain(t2.get$_featureLayerGroup());
  osm = $.Proxy_Proxy($.context().get$L().get$TileLayer(), this.tileURL_3, mapOptions, $, $);
  t2.get$_liblib3$_map().addLayer$1(osm);
  mouseOptions = $.map($.makeLiteralMap(["numDigits", 5]));
  $.Proxy_Proxy($.context().get$L().get$MousePosition(), mouseOptions, $, $, $).addTo$1(t2.get$_liblib3$_map());
  t2.get$_liblib3$_map().setView$2($.Proxy_Proxy($.context().get$L().get$LatLng(), t2.get$initialLat(), t2.get$initialLon(), $, $), t2.get$initialZoom());
  $.retain(t2.get$_liblib3$_map());
  t3 = $.Callback$many(t2.get$moveendEvent());
  $.context().set$moveendHandler(t3);
  t2.get$_liblib3$_map().on$2("moveend", $.context().get$moveendHandler());
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;arg1_1,closure_2",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;arg1_3,closure_4,arg2_5",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.anon = {"":"Closure;this_0",
 call$1: function(msg, exception) {
  var receiver, method, t1, args, result, e;
  try {
    receiver = $.index(this.this_0.get$_registry(), $.index(msg, 0));
    method = $.index(msg, 1);
    t1 = $.index(msg, 2);
    args = $.getInterceptor$JSArray(t1).map$1(t1, $._deserialize);
    if ($.eqB(method, "#call")) {
      result = null;
      t1 = args;
      switch ($.getInterceptor$JSStringJSArray(t1).get$length(t1)) {
        case 0:
          result = $._serialize(receiver.call$0());
          break;
        case 1:
          result = $._serialize(receiver.call$1($.index(args, 0)));
          break;
        case 2:
          result = $._serialize(receiver.call$2($.index(args, 0), $.index(args, 1)));
          break;
        case 3:
          result = $._serialize(receiver.call$3($.index(args, 0), $.index(args, 1), $.index(args, 2)));
          break;
        case 4:
          result = $._serialize(receiver.call$4($.index(args, 0), $.index(args, 1), $.index(args, 2), $.index(args, 3)));
          break;
        default:
          throw $.$$throw("Unsupported number of arguments.");
      }
      t1 = ["return", result];
      return t1;
    } else
      throw $.$$throw("Invocation unsupported on non-function Dart proxies");
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    return ["throws", $.S(e)];
  }

}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,result_1,visiting_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_1;
  t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$.ReceivePortSync_receive_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var data, replyTo, t1, message, result;
  data = $.JSON_parse(e.get$detail());
  replyTo = $.index(data, 0);
  t1 = $.index(data, 1);
  message = $._JsDeserializer$().deserialize$1(t1);
  result = this.this_0._callback$1(message);
  $._dispatchEvent(replyTo, $._JsSerializer$().traverse$1(result));
}
};

$$.Storage_values_anon = {"":"Closure;values_0",
 call$2: function(k, v) {
  var t1 = this.values_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, v);
}
};

$$._HashMapImpl_values_anon = {"":"Closure;box_0,list_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.i_0;
  t2.i_0 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._LinkedHashMapImpl_values_anon = {"":"Closure;box_0,list_1",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.index_0;
  t2.index_0 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.Storage_keys_anon = {"":"Closure;keys_0",
 call$2: function(k, v) {
  var t1 = this.keys_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, k);
}
};

$$._HashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.i_0;
  t2.i_0 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._LinkedHashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.index_0;
  t2.index_0 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._RemoteSendPortSync__call_anon = {"":"Closure;box_0",
 call$1: function(e) {
  var result = $.JSON_parse(e.get$detail());
  this.box_0.result_0 = result;
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$._JsonStringifier_stringifyJsonValue_anon = {"":"Closure;box_0,this_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.box_0;
  t2 = t1.first_0 !== true;
  t3 = this.this_1;
  if (t2) {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, ",\"");
  } else {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, "\"");
  }
  t2 = this.this_1;
  $._JsonStringifier_escape(t2.get$sb(), key);
  t3 = t2.get$sb();
  $.getInterceptor$JSArray(t3).add$1(t3, "\":");
  t2.stringifyValue$1(value);
  t1.first_0 = false;
}
};

$$._deserialize_deserializeFunction = {"":"Closure;",
 call$1: function(message) {
  var id, port;
  id = $.index(message, 1);
  port = $.index(message, 2);
  if ($.eqB(port, $.get$_proxiedObjectTable().get$sendPort()))
    return $.get$_proxiedObjectTable().get$1(id);
  else
    return $._FunctionProxy$_internal(port, id)._call;
}
};

$$._deserialize_deserializeObject = {"":"Closure;",
 call$1: function(message) {
  var id, port;
  id = $.index(message, 1);
  port = $.index(message, 2);
  if ($.eqB(port, $.get$_proxiedObjectTable().get$sendPort()))
    return $.get$_proxiedObjectTable().get$1(id);
  else
    return $.Proxy$_internal(port, id);
}
};

$$.ConstantMap_values_anon = {"":"Closure;this_0,result_1",
 call$1: function(key) {
  var t1 = this.result_1;
  return $.getInterceptor$JSArray(t1).add$1(t1, $.index(this.this_0, key));
}
};

$$.ConstantMap_forEach_anon = {"":"Closure;f_0,this_1",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._HashSetImpl_filter_anon = {"":"Closure;result_0,f_1",
 call$2: function(key, value) {
  var t1;
  if (this.f_1.call$1(key) === true) {
    t1 = this.result_0;
    $.getInterceptor$JSArray(t1).add$1(t1, key);
  }
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;f_0,output_1",
 call$1: function(element) {
  var t1;
  if (this.f_0.call$1(element) === true) {
    t1 = this.output_1;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.anon0 = {"":"Closure;id_0,port_1",
 call$4: function(arg0, arg1, arg2, arg3) {
  var t1, t2, t3, t4, args, message, result;
  t1 = $ === arg0;
  if (t1)
    arg0 = null;
  t1 = !t1;
  t2 = $ === arg1;
  if (t2)
    arg1 = null;
  t2 = !t2;
  t3 = $ === arg2;
  if (t3)
    arg2 = null;
  t3 = !t3;
  t4 = $ === arg3;
  if (t4)
    arg3 = null;
  if (!t4)
    args = [arg0, arg1, arg2, arg3];
  else if (t3)
    args = [arg0, arg1, arg2];
  else if (t2)
    args = [arg0, arg1];
  else
    args = t1 ? [arg0] : [];
  message = [this.id_0, "", "apply", $.CONSTANT0.map$1(args, $._serialize)];
  result = this.port_1.callSync$1(message);
  if ($.eqB($.index(result, 0), "throws"))
    throw $.$$throw($.index(result, 1));
  return $._deserialize($.index(result, 1));
},
 call$0: function() {
  return this.call$4($, $, $, $);
},
 call$1: function(arg0) {
  return this.call$4(arg0, $, $, $);
},
 call$2: function(arg0, arg1) {
  return this.call$4(arg0, arg1, $, $);
},
 call$3: function(arg0, arg1, arg2) {
  return this.call$4(arg0, arg1, arg2, $);
}
};

$$._HashSetImpl_map_anon = {"":"Closure;result_0,f_1",
 call$2: function(key, value) {
  var t1 = this.result_0;
  $.getInterceptor$JSArray(t1).add$1(t1, this.f_1.call$1(key));
}
};

$$._initialize_anon = {"":"Closure;",
 call$1: function(_) {
  return $._enterScope();
}
};

$$._initialize_anon0 = {"":"Closure;",
 call$1: function(args) {
  return $._exitScope($.index(args, 0));
}
};

$$._HashSetImpl_addAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.OpenStreetMap_getBounds_anon = {"":"Closure;box_0,this_1",
 call$0: function() {
  var t1, south, t2;
  t1 = this.this_1;
  south = t1.get$_liblib3$_map().getBounds$0().getSouthWest$0().get$lat();
  t2 = this.box_0;
  t2.south_0 = south;
  t2.west_1 = t1.get$_liblib3$_map().getBounds$0().getSouthWest$0().get$lng();
  t2.north_2 = t1.get$_liblib3$_map().getBounds$0().getNorthEast$0().get$lat();
  t2.east_3 = t1.get$_liblib3$_map().getBounds$0().getNorthEast$0().get$lng();
}
};

$$.OpenStreetMap_getZoom_anon = {"":"Closure;this_0",
 call$0: function() {
  var t1 = this.this_0;
  t1.set$_zoom(t1.get$_liblib3$_map().getZoom$0());
}
};

$$.Proxy__serializeDataTree_anon = {"":"Closure;",
 call$1: function(e) {
  return $.Proxy__serializeDataTree(e);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":"Closure;values_1,copies_2",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_2;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_1;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_2;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":"Closure;copies_3",
 call$1: function(i) {
  return $.index(this.copies_3, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":"Closure;copies_4",
 call$2: function(i, x) {
  $.indexSet(this.copies_4, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":"Closure;",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":"Closure;findSlot_5,readSlot_6,writeSlot_7",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, copy0, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_5.call$1(e);
    t1.copy_0 = this.readSlot_6.call$1(slot);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = {};
    this.writeSlot_7.call$2(slot, t1.copy_0);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_0;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_5.call$1(e);
    t2 = this.readSlot_6;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_7.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_7;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy0 = t2.call$1(slot);
          if (true === copy0) {
            copy0 = new Array(length$);
            t3.call$2(slot, copy0);
          }
          if (typeof copy0 !== 'object' || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !copy0.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(3, e, t3, elementCopy, length$, copy0, slot, i, copy, t2);
          for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy0[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy0[i] = elementCopy;
          ++i;
          copy = copy0;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, length$, copy, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$("structured clone of other type"));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      length$ = env1;
      e = env0;
      break;
    case 3:
      t3 = env8;
      copy = env7;
      i = env6;
      slot = env5;
      copy0 = env4;
      length$ = env3;
      elementCopy = env2;
      t2 = env1;
      e = env0;
      break;
    case 4:
      i = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_5.call$1(e);
        t1.copy_0 = this.readSlot_6.call$1(slot);
        t2 = t1.copy_0;
        if (!(t2 == null))
          return t2;
        t1.copy_0 = {};
        this.writeSlot_7.call$2(slot, t1.copy_0);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_0;
      }
    default:
      var t1, slot, t2, e, length$, t3, copy, i, element, elementCopy, copy0, j;
      if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.getInterceptor$JSStringJSArray(e).get$length(e);
          case 2:
            state0 = 0;
            slot = this.findSlot_5.call$1(e);
            t3 = this.readSlot_6;
            copy = t3.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_7.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t2 = this.writeSlot_7;
          case 3:
            if (state0 === 3 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t2.call$2(slot, true);
                  i = 0;
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 3:
                          if (state0 === 3 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy0 = t3.call$1(slot);
                                if (true === copy0) {
                                  copy0 = new Array(length$);
                                  t2.call$2(slot, copy0);
                                }
                              case 3:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy0, j, $.index(e, j));
                                $.indexSet(copy0, i, elementCopy);
                                ++i;
                                copy = copy0;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t2.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t2.call$2(slot, copy);
              i = 0;
            }
          case 4:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$("structured clone of other type"));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":"Closure;box_0,walk_8",
 call$2: function(key, value) {
  this.box_0.copy_0[key] = this.walk_8.call$1(value);
}
};

$$.processVesselsInBounds_anon = {"":"Closure;",
 call$2: function(k, v) {
  if (!($.index(v, "polygon") == null))
    $.index(v, "polygon").stopAnimation$0();
  if (!($.index(v, "triangle") == null))
    $.index(v, "triangle").stopAnimation$0();
}
};

$$.processVesselsInBounds_anon0 = {"":"Closure;currentZoom_0,x_1",
 call$1: function(vesselWithMapObjects) {
  $.indexSet($.get$vessels(), $.S($.index(this.x_1, "mmsi")), vesselWithMapObjects);
  if ($.gtB(this.currentZoom_0, 12)) {
    if (!($.index(vesselWithMapObjects, "triangle") == null))
      $.index(vesselWithMapObjects, "triangle").startAnimation$0();
    if (!($.index(vesselWithMapObjects, "polygon") == null))
      $.index(vesselWithMapObjects, "polygon").startAnimation$0();
  }
}
};

$$.AnimatedPolygon_startAnimation_anon = {"":"Closure;this_0",
 call$0: function() {
  this.this_0.get$_mapFeature().start$0();
}
};

$$.AnimatedPolygon_stopAnimation_anon = {"":"Closure;this_0",
 call$0: function() {
  this.this_0.get$_mapFeature().stop$0();
}
};

$$.Marker_setIcon_anon = {"":"Closure;this_0,icon_1",
 call$0: function() {
  var t1, t2, size, js_icon;
  t1 = $.context().get$L().get$Point();
  t2 = this.icon_1;
  size = $.Proxy_Proxy(t1, t2.get$dimension().get$width(), t2.get$dimension().get$height(), $, $);
  js_icon = $.Proxy_Proxy($.context().get$L().get$Icon(), $.map($.makeLiteralMap(["iconUrl", t2.get$imageURL(), "iconSize", size])), $, $, $);
  this.this_0.get$_mapFeature().setIcon$1(js_icon);
}
};

$$.Marker_addTo_anon = {"":"Closure;map_0,this_1,featureLayer_2",
 call$0: function() {
  var t1, t2, t3;
  t1 = this.featureLayer_2 === true;
  t2 = this.map_0;
  t3 = this.this_1;
  if (t1)
    t2.get$_featureLayerGroup().addLayer$1(t3.get$_mapFeature());
  else
    t3.get$_mapFeature().addTo$1(t2);
}
};

$$.anon1 = {"":"Closure;latitude_0,longitude_1,tooltip_2,draggable_3,this_4",
 call$0: function() {
  var pos, options, t1, t2;
  pos = $.Proxy_Proxy($.context().get$L().get$LatLng(), this.latitude_0, this.longitude_1, $, $);
  options = $.Map_Map();
  t1 = this.tooltip_2;
  if (!(t1 == null))
    $.indexSet(options, "title", t1);
  t1 = this.draggable_3;
  if (!(t1 == null))
    $.indexSet(options, "draggable", t1);
  t1 = $.Proxy_Proxy($.context().get$L().get$Marker(), pos, $.map(options), $, $);
  t2 = this.this_4;
  t2.set$_mapFeature(t1);
  $.retain(t2.get$_mapFeature());
}
};

$$.anon2 = {"":"Closure;vMmsi_0,this_1,vectorPoint_2,options_3",
 call$0: function() {
  var latlng, t1, point, circleOptions, t2, t3;
  latlng = $.context().get$L().get$LatLng();
  t1 = this.vectorPoint_2;
  point = $.Proxy_Proxy(latlng, t1.get$latitude(), t1.get$longitude(), $, $);
  circleOptions = $.map(this.options_3);
  t2 = $.Proxy_Proxy($.context().get$L().get$CircleMarker(), point, circleOptions, $, $);
  t3 = this.this_1;
  t3.set$_mapFeature(t2);
  t3.addListeners$1(this.vMmsi_0);
  $.retain(t3.get$_mapFeature());
}
};

$$.MapFeature_addListeners_onClickHandler = {"":"Closure;mmsi_0",
 call$1: function(e) {
  return $.onClickHandler(e, this.mmsi_0);
}
};

$$.MapFeature_addListeners_onMouseoutHandler = {"":"Closure;",
 call$1: function(e) {
  return $.onMouseoutHandler(e);
}
};

$$.MapFeature_addListeners_onMouseoverHandler = {"":"Closure;mmsi_1",
 call$1: function(e) {
  return $.onMouseoverHandler(e, this.mmsi_1);
}
};

$$.OpenStreetMap_openPopup_anon = {"":"Closure;popup_0,this_1",
 call$0: function() {
  var t1, t2, t3;
  t1 = this.this_1;
  t2 = t1.get$_liblib3$_map();
  t3 = this.popup_0;
  t2.openPopup$1(t3);
  t1.set$_popup(t3);
}
};

$$.OpenStreetMap_closePopup_anon = {"":"Closure;this_0",
 call$0: function() {
  this.this_0.get$_liblib3$_map().closePopup$0();
}
};

$$.anon3 = {"":"Closure;content_0,options_1,popupOrigin_2,this_3",
 call$0: function() {
  var popupOptions, offsetPoint, latlng, t1, origin, t2, t3;
  popupOptions = this.options_1;
  offsetPoint = $.Proxy_Proxy($.context().get$L().get$Point(), $.index($.index(popupOptions, "offset"), 0), $.index($.index(popupOptions, "offset"), 1), $, $);
  latlng = $.context().get$L().get$LatLng();
  t1 = this.popupOrigin_2;
  origin = $.Proxy_Proxy(latlng, t1.get$latitude(), t1.get$longitude(), $, $);
  $.indexSet(popupOptions, "offset", offsetPoint);
  popupOptions = $.map(popupOptions);
  t2 = $.Proxy_Proxy($.context().get$L().get$Popup(), popupOptions, $, $, $);
  t3 = this.this_3;
  t3.set$_popup(t2);
  t3.get$_popup().setLatLng$1(origin);
  t3.get$_popup().setContent$1(this.content_0);
  $.retain(t3.get$_popup());
}
};

$$._DateImpl_toString_fourDigits = {"":"Closure;",
 call$1: function(n) {
  var absN, sign;
  absN = $.getInterceptor$JSNumber(n).abs$0(n);
  sign = $.ltB(n, 0) ? "-" : "";
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + "0" + $.S(absN);
  if ($.geB(absN, 10))
    return sign + "00" + $.S(absN);
  return sign + "000" + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$.anon4 = {"":"Closure;this_0,vectorPoints_1,options_2,vmmsi_3",
 call$0: function() {
  var latlng, points, t1, x, t2, triangleOptions;
  latlng = $.context().get$L().get$LatLng();
  points = $.array([]);
  t1 = this.vectorPoints_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$0$bailout(1, points, t1, latlng);
  x = 0;
  for (; x < t1.length; ++x) {
    t2 = t1[x];
    points.push$1($.Proxy_Proxy(latlng, t2.get$latitude(), t2.get$longitude(), $, $));
  }
  triangleOptions = $.map(this.options_2);
  t1 = $.Proxy_Proxy($.context().get$L().get$animatedPolygon(), points, triangleOptions, $, $);
  t2 = this.this_0;
  t2.set$_mapFeature(t1);
  t2.addListeners$1(this.vmmsi_3);
  $.retain(t2.get$_mapFeature());
},
 call$0$bailout: function(state0, points, t1, latlng) {
  var x, triangleOptions, t2;
  x = 0;
  for (; $.ltB(x, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++x)
    points.push$1($.Proxy_Proxy(latlng, $.index(t1, x).get$latitude(), $.index(t1, x).get$longitude(), $, $));
  triangleOptions = $.map(this.options_2);
  t1 = $.Proxy_Proxy($.context().get$L().get$animatedPolygon(), points, triangleOptions, $, $);
  t2 = this.this_0;
  t2.set$_mapFeature(t1);
  t2.addListeners$1(this.vmmsi_3);
  $.retain(t2.get$_mapFeature());
}
};

$$.MapFeature_addTo_anon = {"":"Closure;this_0,featureLayer_1,map_2",
 call$0: function() {
  var t1, t2, t3;
  t1 = this.featureLayer_1 === true;
  t2 = this.map_2;
  t3 = this.this_0;
  if (t1)
    t2.get$_featureLayerGroup().addLayer$1(t3.get$_mapFeature());
  else
    t3.get$_mapFeature().addTo$1(t2.get$_liblib3$_map());
}
};

$$.anon5 = {"":"Closure;vectorPoints_0,this_1,options_2",
 call$0: function() {
  var latlng, points, t1, x, t2, lineOptions;
  latlng = $.context().get$L().get$LatLng();
  points = $.array([]);
  t1 = this.vectorPoints_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$0$bailout0(1, points, t1, latlng);
  x = 0;
  for (; x < t1.length; ++x) {
    t2 = t1[x];
    points.push$1($.Proxy_Proxy(latlng, t2.get$latitude(), t2.get$longitude(), $, $));
  }
  lineOptions = $.map(this.options_2);
  t1 = $.Proxy_Proxy($.context().get$L().get$Polyline(), points, lineOptions, $, $);
  t2 = this.this_1;
  t2.set$_mapFeature(t1);
  $.retain(t2.get$_mapFeature());
},
 call$0$bailout0: function(state0, points, t1, latlng) {
  var x, lineOptions, t2;
  x = 0;
  for (; $.ltB(x, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++x)
    points.push$1($.Proxy_Proxy(latlng, $.index(t1, x).get$latitude(), $.index(t1, x).get$longitude(), $, $));
  lineOptions = $.map(this.options_2);
  t1 = $.Proxy_Proxy($.context().get$L().get$Polyline(), points, lineOptions, $, $);
  t2 = this.this_1;
  t2.set$_mapFeature(t1);
  $.retain(t2.get$_mapFeature());
}
};

$$.OpenStreetMap_clearFeatureLayer_anon = {"":"Closure;this_0",
 call$0: function() {
  this.this_0.get$_featureLayerGroup().clearLayers$0();
}
};

$$.CircleMarker_clearLayers_anon = {"":"Closure;",
 call$0: function() {
}
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"":"Closure;values_0,copies_1",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout2(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout2: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_0;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_1;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"":"Closure;copies_2",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"":"Closure;copies_3",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"":"Closure;findSlot_4,readSlot_5,writeSlot_6,mustCopy_7",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout1(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(2, e, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (t1 = $.CONSTANT0.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(4, e, length$, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout1: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env2;
      length$ = env1;
      e = env0;
      break;
    case 4:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (t1 = $.CONSTANT0.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    default:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.getInterceptor$JSStringJSArray(e).get$length(e);
          case 3:
            state0 = 0;
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 4:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$._BaseSendPort_call_anon = {"":"Closure;port_0,completer_1",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"":"Closure;this_0,message_1,replyTo_2",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_0;
  t2 = this.replyTo_2;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
  t2 = $._globalState().get$isWorker() === true;
  t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"":"Closure;callback_0",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"":"Closure;box_0,result_1,pos_2,values_3,completer_4",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_3;
  $.indexSet(t1, this.pos_2, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_0, 1);
  t2.remaining_0 = remaining;
  if ($.eqB(remaining, 0) && this.result_1.get$isComplete() !== true)
    this.completer_4.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":"Closure;result_5,future_6,completer_7",
 call$1: function(exception) {
  if (this.result_5.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_6.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"":"Closure;this_0",
 call$1: function(e) {
  return this.this_0._liblib4$_dispatch$1(e);
}
};

$$._PendingSendPortFinder_visitList_anon = {"":"Closure;this_0",
 call$1: function(e) {
  return this.this_0._liblib4$_dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"":"Closure;this_1,replyTo_2,message_3",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_1;
  t3 = this.replyTo_2;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState().get$isolates(), t2.get$_liblib4$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_liblib4$_receivePort().get$_liblib4$_callback() == null)
    return;
  shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_liblib4$_isolateId());
  msg = this.message_3;
  t1.msg_0 = msg;
  t1.reply_1 = t3;
  if (shouldSerialize) {
    t1.msg_0 = $._serializeMessage(t1.msg_0);
    t1.reply_1 = $._serializeMessage(t1.reply_1);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
}
};

$$._NativeJsSendPort_send__anon = {"":"Closure;box_0,this_4,shouldSerialize_5",
 call$0: function() {
  var t1, t2;
  t1 = this.this_4;
  if (!(t1.get$_liblib4$_receivePort().get$_liblib4$_callback() == null)) {
    if (this.shouldSerialize_5 === true) {
      t2 = this.box_0;
      t2.msg_0 = $._deserializeMessage(t2.msg_0);
      t2.reply_1 = $._deserializeMessage(t2.reply_1);
    }
    t1 = t1.get$_liblib4$_receivePort();
    t2 = this.box_0;
    t1._liblib4$_callback$2(t2.msg_0, t2.reply_1);
  }
}
};

$$._Copier_visitMap_anon = {"":"Closure;box_0,this_1",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_0;
  t2 = this.this_1;
  $.indexSet(t1, t2._liblib4$_dispatch$1(key), t2._liblib4$_dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"":"Closure;this_0",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.BoundClosure = {"":"Closure;self,target", call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure0 = {"":"Closure;self,target", call$0: function() {
  return this.self[this.target]();
}
};
$$.BoundClosure1 = {"":"Closure;self,target", call$5: function(p0, p1, p2, p3, p4) {
  return this.self[this.target](p0, p1, p2, p3, p4);
},
 call$2: function(method, url) {
  return this.call$5(method, url, null, null, null);
},
 call$3: function(method, url, async) {
  return this.call$5(method, url, async, null, null);
},
 call$4: function(method, url, async, user) {
  return this.call$5(method, url, async, user, null);
}
};
$$.BoundClosure2 = {"":"Closure;self,target", call$3: function(p0, p1, p2) {
  return this.self[this.target](p0, p1, p2);
},
 call$2: function(url, name$) {
  return this.call$3(url, name$, null);
}
};
$$.BoundClosure3 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
},
 call$0: function() {
  return this.call$2(null, null);
},
 call$1: function(code) {
  return this.call$2(code, null);
}
};
$$.BoundClosure4 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
},
 call$1: function(name$) {
  return this.call$2(name$, null);
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT1.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CONSTANT1.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.createInvocationMirror = function(name$, internalName, type, arguments$, argumentNames) {
  return $.JSInvocationMirror$(name$, internalName, type, arguments$, argumentNames);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT2.endsWith$1(message, "is null") === true || $.CONSTANT2.endsWith$1(message, "is undefined") === true || $.CONSTANT2.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(arg1, closure));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg1, closure, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.ElementInstanceEvents$ = function(_ptr) {
  return new $.ElementInstanceEvents(_ptr);
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$._JsSerializer$0 = function() {
  var t1 = new $._JsSerializer0(0, $._MessageTraverserVisitedMap$0());
  t1._JsSerializer$0();
  return t1;
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT6));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT6)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CONSTANT2.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT2.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT2.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$._MessageTraverserVisitedMap$0 = function() {
  return new $._MessageTraverserVisitedMap0();
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$0());
  t1._JsCopier$0();
  return t1;
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$0();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.getInterceptor$JSStringJSArray(futures).get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT7);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_0 = futures.length;
  values = $.List_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(t1, result, i, values, completer));
    future.handleException$1(new $.Futures_wait_anon0(result, future, completer));
  }
  return result;
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.JSInvocationMirror$ = function(memberName, _internalName, _kind, _arguments, _namedArgumentNames) {
  return new $.JSInvocationMirror(memberName, _internalName, _kind, _arguments, _namedArgumentNames, null);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.main = function() {
  $.initMap();
  $.initTypeArrays();
  $.initWebSocket(2);
};

$.initMap = function() {
  var t1, height, width, height0, width0;
  t1 = $.window().get$innerHeight();
  height = $.getInterceptor(t1).toString$0(t1);
  t1 = $.window().get$innerWidth();
  width = $.getInterceptor(t1).toString$0(t1);
  height0 = $.S(height) + " px";
  width0 = $.S(width) + " px";
  $.leaflet_map = $.OpenStreetMap$("map", [$.Coord$(53.54, 9.91), 15], height0, width0);
  $.leaflet_map.loadMap$0();
};

$.initWebSocket = function(retrySeconds) {
  var t1, t2;
  t1 = {};
  t1.encounteredError_0 = false;
  $.window().get$console().log$1("Connecting to Web socket");
  $.socket = $.WebSocket_WebSocket("ws://127.0.0.1:8090");
  t2 = $.socket.get$on().get$open();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.initWebSocket_anon());
  t2 = $.socket.get$on().get$close();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.initWebSocket_anon0(t1, retrySeconds));
  t2 = $.socket.get$on().get$error();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.initWebSocket_anon1(t1, retrySeconds));
  t2 = $.socket.get$on().get$message();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.initWebSocket_anon2());
};

$.changeRegistration = function() {
  var zoom, boundsArray, bounds, message;
  zoom = $.leaflet_map.getZoom$0();
  if ($.ltB(zoom, 3)) {
    $.leaflet_map.zoomTo$1(3);
    return;
  }
  $.getInterceptor(zoom).toString$0(zoom);
  $.window().get$console().debug$1("zoomLevel= " + $.S(zoom));
  boundsArray = $.leaflet_map.getBounds$0();
  bounds = $.makeLiteralMap(["_southWest", $.makeLiteralMap(["lat", $.index(boundsArray, 0), "lng", $.index(boundsArray, 1)]), "_northEast", $.makeLiteralMap(["lat", $.index(boundsArray, 2), "lng", $.index(boundsArray, 3)])]);
  message = $.Map_Map();
  $.indexSet(message, "function", "register");
  $.indexSet(message, "zoom", zoom);
  $.indexSet(message, "bounds", bounds);
  $.socket.send$1($.JSON_stringify(message));
};

$.processVesselsInBounds = function(jsonArray) {
  var currentZoom, t2, t1;
  currentZoom = $.leaflet_map.getZoom$0();
  if (typeof currentZoom !== 'number')
    return $.processVesselsInBounds$bailout(1, jsonArray, currentZoom);
  t2 = $.get$vessels();
  $.getInterceptor$JSArray(t2).forEach$1(t2, new $.processVesselsInBounds_anon());
  t2 = $.get$vessels();
  $.getInterceptor$JSArray(t2).clear$0(t2);
  $.leaflet_map.clearFeatureLayer$0();
  for (t1 = $.getInterceptor$JSArray(jsonArray).iterator$0(jsonArray); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.paintToMap(t2, new $.processVesselsInBounds_anon0(currentZoom, t2));
  }
  if (currentZoom > 13) {
    t1 = "vessels reporting > " + $.S($.index($.get$zoomSpeedArray(), currentZoom)) + " knots";
    $.query("#zoomSpeed").set$text(t1);
    $.query("#zoomSpeed").get$style().set$display("block");
  } else
    $.query("#zoomSpeed").get$style().set$display("none");
};

$.paintToMap = function(v, callback) {
  var moving, t1, shipStatics, cos_angle, sin_angle, vectorLength, vectorWidth, vectorPoints, shipPoint, circleOptions, iconOptions, icon;
  if (!($.index(v, "pos") == null)) {
    if (v.containsKey$1("ship_type") !== true)
      $.indexSet(v, "ship_type", 56);
    if ($.ltB($.index(v, "msgid"), 4) || $.eqB($.index(v, "msgid"), 5)) {
      moving = !($.index(v, "sog") == null) && $.gtB($.index(v, "sog"), 0.4) && !$.eqB($.index(v, "sog"), 102.3);
      if ($.gtB($.leaflet_map.getZoom$0(), 11)) {
        if ($.index(v, "cog") == null)
          t1 = !($.index(v, "true_heading") == null) && !$.eqB($.index(v, "true_heading"), 0) && !$.eqB($.index(v, "true_heading"), 511);
        else
          t1 = true;
        shipStatics = t1 && !($.index(v, "dim_port") == null) && !($.index(v, "dim_stern") == null);
      } else
        shipStatics = false;
      $.indexSet(v, "angle", $.calcAngle(v));
      cos_angle = $.cos($.index(v, "angle"));
      sin_angle = $.sin($.index(v, "angle"));
      vectorLength = $.gtB($.index(v, "sog"), 30) ? $.div($.index(v, "sog"), 10) : $.index(v, "sog");
      vectorWidth = $.gtB($.index(v, "sog"), 30) ? 5 : 2;
      vectorPoints = $.List_List(null);
      shipPoint = $.Coord$($.index($.index(v, "pos"), 1), $.index($.index(v, "pos"), 0));
      vectorPoints.push(shipPoint);
      if (moving) {
        vectorPoints.push(shipPoint);
        vectorPoints.push(shipPoint);
        vectorPoints.push($.calcVector($.index($.index(v, "pos"), 0), $.index($.index(v, "pos"), 1), vectorLength, sin_angle, cos_angle));
        $.indexSet(v, "vector", $.Polyline$(vectorPoints, $.makeLiteralMap(["color", "red", "weight", vectorWidth])));
        $.index(v, "vector").addTo$2($.leaflet_map, true);
        if (shipStatics) {
          $.indexSet(v, "polygon", $.AnimatedPolygon$(vectorPoints, $.makeLiteralMap(["autoStart", false, "animation", true, "distance", $.div(vectorLength, 10), "interval", 200, "dim_stern", $.index(v, "dim_stern"), "dim_port", $.index(v, "dim_port"), "dim_bow", $.index(v, "dim_bow"), "dim_starboard", $.index(v, "dim_starboard"), "angle", $.index(v, "angle"), "color", "blue", "weight", 3, "fill", true, "fillColor", $.index($.get$shipTypeColors(), $.index(v, "ship_type")), "fillOpacity", 0.6, "clickable", false]), $.index(v, "mmsi")));
          $.index(v, "polygon").addTo$2($.leaflet_map, true);
        }
        $.indexSet(v, "triangle", $.AnimatedPolygon$(vectorPoints, $.makeLiteralMap(["autoStart", false, "animation", true, "distance", $.div(vectorLength, 10), "interval", 200, "angle", $.index(v, "angle"), "zoom", $.leaflet_map.getZoom$0(), "color", "black", "weight", 1, "fill", true, "fillColor", $.index($.get$shipTypeColors(), $.index(v, "ship_type")), "fillOpacity", 0.8, "clickable", true]), $.index(v, "mmsi")));
        $.index(v, "triangle").addTo$2($.leaflet_map, true);
      } else {
        if (shipStatics) {
          $.indexSet(v, "polygon", $.AnimatedPolygon$(vectorPoints, $.makeLiteralMap(["autoStart", false, "animation", false, "distance", $.div(vectorLength, 10), "interval", 200, "dim_stern", $.index(v, "dim_stern"), "dim_port", $.index(v, "dim_port"), "dim_bow", $.index(v, "dim_bow"), "dim_starboard", $.index(v, "dim_starboard"), "angle", $.index(v, "angle"), "color", "blue", "weight", 3, "fill", true, "fillColor", $.index($.get$shipTypeColors(), $.index(v, "ship_type")), "fillOpacity", 0.6, "clickable", false]), $.index(v, "mmsi")));
          $.index(v, "polygon").addTo$2($.leaflet_map, true);
        }
        circleOptions = $.makeLiteralMap(["radius", 4, "fill", true, "fillColor", $.index($.get$shipTypeColors(), $.index(v, "ship_type")), "fillOpacity", 0.8, "color", "#000000", "strokeOpacity", 1, "strokeWidth", 0.5]);
        if (0 >= vectorPoints.length)
          throw $.ioore(0);
        $.indexSet(v, "marker", $.CircleMarker$(vectorPoints[0], circleOptions, $.index(v, "mmsi")));
        $.index(v, "marker").addTo$2($.leaflet_map, true);
      }
    } else {
      iconOptions = $.chooseIconOptions(v);
      icon = $.Icon$($.index(iconOptions, "iconUrl"), $.index(iconOptions, "iconSize"));
      $.indexSet(v, "marker", $.Marker$($.index($.index(v, "pos"), 1), $.index($.index(v, "pos"), 0), $.index(v, "name"), false));
      $.index(v, "marker").setIcon$1(icon);
      $.index(v, "marker").addTo$2($.leaflet_map, true);
    }
    callback.call$1(v);
  }
};

$.chooseIconOptions = function(obj) {
  var zoom, t1;
  zoom = $.leaflet_map.getZoom$0();
  if ($.eqB($.index(obj, "msgid"), 21))
    return $.makeLiteralMap(["iconUrl", "images/atons/aton_" + $.S($.index(obj, "aton_type")) + ".png", "iconSize", $.Dimension$(zoom, zoom)]);
  else if ($.eqB($.index(obj, "msgid"), 4))
    return $.makeLiteralMap(["iconUrl", "images/baseStation.png", "iconSize", $.Dimension$($.sub(zoom, 1), $.sub(zoom, 1))]);
  else if ($.eqB($.index(obj, "msgid"), 9)) {
    if (typeof zoom !== 'number')
      throw $.iae(zoom);
    t1 = 3 * zoom;
    return $.makeLiteralMap(["iconUrl", "images/helicopter.png", "iconSize", $.Dimension$(t1, t1)]);
  } else
    return $.makeLiteralMap(["iconUrl", "http://images.vesseltracker.com/images/googlemaps/icon_lastpos.png", "iconSize", $.Dimension$(6 + 2 * $.log(zoom), 6 + 2 * $.log(zoom))]);
};

$.initTypeArrays = function() {
  $.indexSet($.get$shipTypes(), 6, "Passenger Ships");
  $.indexSet($.get$shipTypes(), 7, "Cargo Ships");
  $.indexSet($.get$shipTypes(), 8, "Tankers");
  $.indexSet($.get$shipTypes(), 30, "Fishing");
  $.indexSet($.get$shipTypes(), 31, "Towing");
  $.indexSet($.get$shipTypes(), 32, "Towing");
  $.indexSet($.get$shipTypes(), 33, "Dredger");
  $.indexSet($.get$shipTypes(), 34, "Engaged in diving operations");
  $.indexSet($.get$shipTypes(), 35, "Engaged in military operations");
  $.indexSet($.get$shipTypes(), 36, "Sailing");
  $.indexSet($.get$shipTypes(), 37, "Pleasure craft");
  $.indexSet($.get$shipTypes(), 50, "Pilot vessel");
  $.indexSet($.get$shipTypes(), 51, "Search and rescue vessels");
  $.indexSet($.get$shipTypes(), 52, "Tugs");
  $.indexSet($.get$shipTypes(), 53, "Port tenders");
  $.indexSet($.get$shipTypes(), 54, "anti-pollution vessels");
  $.indexSet($.get$shipTypes(), 55, "Law enforcement vessels");
  $.indexSet($.get$shipTypes(), 56, "Spare for local vessels");
  $.indexSet($.get$shipTypes(), 57, "Spare for local vessels");
  $.indexSet($.get$shipTypes(), 58, "Medical transports");
  $.indexSet($.get$shipTypes(), 59, "Ships according to RR");
  $.indexSet($.get$shipTypeColors(), 20, "#f9f9f9");
  $.indexSet($.get$shipTypeColors(), 29, "#f9f9f9");
  $.indexSet($.get$shipTypeColors(), 30, "#f99d7b");
  $.indexSet($.get$shipTypeColors(), 31, "#4dfffe");
  $.indexSet($.get$shipTypeColors(), 32, "#4dfffe");
  $.indexSet($.get$shipTypeColors(), 33, "#f9f9f9");
  $.indexSet($.get$shipTypeColors(), 34, "white");
  $.indexSet($.get$shipTypeColors(), 35, "white");
  $.indexSet($.get$shipTypeColors(), 36, "#f900fe");
  $.indexSet($.get$shipTypeColors(), 37, "#f900fe");
  $.indexSet($.get$shipTypeColors(), 40, "#f9f9f9");
  $.indexSet($.get$shipTypeColors(), 49, "#f9f9f9");
  $.indexSet($.get$shipTypeColors(), 50, "red");
  $.indexSet($.get$shipTypeColors(), 51, "white");
  $.indexSet($.get$shipTypeColors(), 52, "#4dfffe");
  $.indexSet($.get$shipTypeColors(), 53, "#4dfffe");
  $.indexSet($.get$shipTypeColors(), 54, "white");
  $.indexSet($.get$shipTypeColors(), 55, "white");
  $.indexSet($.get$shipTypeColors(), 56, "#d2d2d2");
  $.indexSet($.get$shipTypeColors(), 57, "white");
  $.indexSet($.get$shipTypeColors(), 58, "white");
  $.indexSet($.get$shipTypeColors(), 59, "white");
  $.indexSet($.get$shipTypeColors(), 6, "#2d00fe");
  $.indexSet($.get$shipTypeColors(), 60, "#2d00fe");
  $.indexSet($.get$shipTypeColors(), 69, "#2d00fe");
  $.indexSet($.get$shipTypeColors(), 7, "#95f190");
  $.indexSet($.get$shipTypeColors(), 70, "#95f190");
  $.indexSet($.get$shipTypeColors(), 79, "#95f190");
  $.indexSet($.get$shipTypeColors(), 8, "#f70016");
  $.indexSet($.get$shipTypeColors(), 80, "#f70016");
  $.indexSet($.get$shipTypeColors(), 89, "#f70016");
  $.indexSet($.get$shipTypeColors(), 9, "#d2d2d2");
  $.indexSet($.get$shipTypeColors(), 90, "#d2d2d2");
  $.indexSet($.get$shipTypeColors(), 99, "#d2d2d2");
  $.indexSet($.get$nav_stati(), 0, "under way us. engine");
  $.indexSet($.get$nav_stati(), 1, "at anchor");
  $.indexSet($.get$nav_stati(), 2, "not under command");
  $.indexSet($.get$nav_stati(), 3, "restr. maneuverability");
  $.indexSet($.get$nav_stati(), 4, "constr. by draught");
  $.indexSet($.get$nav_stati(), 5, "moored");
  $.indexSet($.get$nav_stati(), 6, "aground");
  $.indexSet($.get$nav_stati(), 7, "engaged in fishing");
  $.indexSet($.get$nav_stati(), 8, "under way sailing");
  $.indexSet($.get$nav_stati(), 9, "future use");
  $.indexSet($.get$nav_stati(), 10, "future use");
  $.indexSet($.get$nav_stati(), 11, "future use");
  $.indexSet($.get$nav_stati(), 12, "future use");
  $.indexSet($.get$nav_stati(), 13, "future use");
  $.indexSet($.get$nav_stati(), 14, "AIS-SART (active)");
  $.indexSet($.get$nav_stati(), 15, "not defined");
  $.indexSet($.get$aton_types(), 0, "notSpecified");
  $.indexSet($.get$aton_types(), 1, "ReferencePoint");
  $.indexSet($.get$aton_types(), 2, "RACON");
  $.indexSet($.get$aton_types(), 3, "off-shoreStructure");
  $.indexSet($.get$aton_types(), 4, "futureUse");
  $.indexSet($.get$aton_types(), 5, "LightWithoutSectors");
  $.indexSet($.get$aton_types(), 6, "LightWithSectors");
  $.indexSet($.get$aton_types(), 7, "LeadingLightFront");
  $.indexSet($.get$aton_types(), 8, "LeadingLightRear");
  $.indexSet($.get$aton_types(), 9, "BeaconCardinalN");
  $.indexSet($.get$aton_types(), 10, "BeaconCardinalE");
  $.indexSet($.get$aton_types(), 11, "BeaconCardinalS");
  $.indexSet($.get$aton_types(), 12, "BeaconCardinalW");
  $.indexSet($.get$aton_types(), 13, "BeaconPorthand");
  $.indexSet($.get$aton_types(), 14, "BeaconStarboardhand");
  $.indexSet($.get$aton_types(), 15, "BeaconPreferredChannelPortHand");
  $.indexSet($.get$aton_types(), 16, "BeaconPreferredChannelStarboardHand");
  $.indexSet($.get$aton_types(), 17, "BeaconIsolatedDanger");
  $.indexSet($.get$aton_types(), 18, "BeacoSafeWater");
  $.indexSet($.get$aton_types(), 19, "BeaconSpecialMark");
  $.indexSet($.get$aton_types(), 20, "CardinalMarkN");
  $.indexSet($.get$aton_types(), 21, "CardinalMarkE");
  $.indexSet($.get$aton_types(), 22, "CardinalMarkS");
  $.indexSet($.get$aton_types(), 23, "CardinalMarkW");
  $.indexSet($.get$aton_types(), 24, "PortHandMark");
  $.indexSet($.get$aton_types(), 25, "StarboardHandMark");
  $.indexSet($.get$aton_types(), 26, "PreferredChannelPortHand");
  $.indexSet($.get$aton_types(), 27, "PreferredChannelStarboardHand");
  $.indexSet($.get$aton_types(), 28, "IsolatedDanger");
  $.indexSet($.get$aton_types(), 29, "SafeWater");
  $.indexSet($.get$aton_types(), 30, "SpecialMark");
  $.indexSet($.get$aton_types(), 31, "LightVessel/LANBY/Rigs");
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.queryAll = function(selector) {
  return $.document().queryAll$1(selector);
};

$._getNewIsolateId = function() {
  if (!window.$dart$isolate$counter)
    window.$dart$isolate$counter = 1;
  return window.$dart$isolate$counter++;
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.createMouseOverPopup = function(vessel) {
  var t1, t2, mouseOverPopup, mouseOverPopup0, t3, t4;
  if ($.eqB($.index(vessel, "msgid"), 21)) {
    t1 = (!($.index(vessel, "name") == null) ? "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>" + $.S($.index(vessel, "name")) + "</b></nobr></td></tr>" : "<div class='mouseOverPopup'><table>") + "<tr><td>MMSI: &nbsp;</td><td><nobr>";
    t2 = $.index(vessel, "mmsi");
    mouseOverPopup = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
    if (!($.index(vessel, "aton_type") == null))
      mouseOverPopup = mouseOverPopup + "<tr><td colspan='2'><b>" + $.S($.index($.get$aton_types(), $.index(vessel, "aton_type"))) + "</b></nobr></td></tr>";
  } else if ($.eqB($.index(vessel, "msgid"), 4)) {
    t1 = ($.index(vessel, "name") === true ? "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>AIS Base Station</b></nobr></td></tr><tr><td colspan='2'><b>" + $.S($.index(vessel, "name")) + "</b></nobr></td></tr>" : "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>AIS Base Station</b></nobr></td></tr>") + "<tr><td>MMSI: &nbsp;</td><td><nobr>";
    t2 = $.index(vessel, "mmsi");
    mouseOverPopup = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
  } else if ($.eqB($.index(vessel, "msgid"), 9)) {
    t1 = ($.index(vessel, "name") === true ? "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>Helicopter SAR</b></nobr></td></tr><tr><td colspan='2'><b>" + $.S($.index(vessel, "name")) + "</b></nobr></td></tr>" : "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>Helicopter SAR</b></nobr></td></tr>") + "<tr><td>MMSI: &nbsp;</td><td><nobr>";
    t2 = $.index(vessel, "mmsi");
    mouseOverPopup = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
    if ($.index(vessel, "altitude") === true) {
      t1 = mouseOverPopup + "<tr><td>Altitude: &nbsp;</td><td><nobr>";
      t2 = $.index(vessel, "altitude");
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
  } else {
    mouseOverPopup = !($.index(vessel, "name") == null) ? "<div class='mouseOverPopup'><table><tr><td colspan='2'><b>" + $.S($.index(vessel, "name")) + "</b></nobr></td></tr>" : "<div class='mouseOverPopup'><table>";
    t1 = (!($.index(vessel, "imo") == null) ? mouseOverPopup + "<tr><td>IMO</td><td>" + $.S($.index(vessel, "imo")) + "</b></nobr></td></tr>" : mouseOverPopup) + "<tr><td>MMSI: &nbsp;</td><td><nobr>";
    t2 = $.index(vessel, "mmsi");
    mouseOverPopup = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
    if (!($.index(vessel, "nav_status") == null) && $.ltB($.index(vessel, "nav_status"), 15) && $.gtB($.index(vessel, "nav_status"), -1))
      mouseOverPopup = mouseOverPopup + "<tr><td>NavStatus: &nbsp;</td><td><nobr>" + $.S($.index($.get$nav_stati(), $.index(vessel, "nav_status"))) + "</nobr></td></tr>";
    if (!($.index(vessel, "sog") == null)) {
      t1 = mouseOverPopup + "<tr><td>Speed: &nbsp;</td><td><nobr>";
      t2 = $.index(vessel, "sog");
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
    if (!($.index(vessel, "true_heading") == null) && !$.eqB($.index(vessel, "true_heading"), 511)) {
      t1 = mouseOverPopup + "<tr><td>Heading: &nbsp;</td><td><nobr>";
      t2 = $.index(vessel, "true_heading");
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
    if (!($.index(vessel, "cog") == null)) {
      t1 = mouseOverPopup + "<tr><td>Course: &nbsp;</td><td><nobr>";
      t2 = $.index(vessel, "cog");
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
    t1 = mouseOverPopup + "<tr><td>TimeReceived: &nbsp;</td><td><nobr>";
    t2 = $.Date_Date$fromMillisecondsSinceEpoch($.index(vessel, "time_received"), true);
    mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</nobr></td></tr>";
    mouseOverPopup = !($.index(vessel, "dest") == null) ? mouseOverPopup0 + "<tr><td>Dest</td><td>" + $.S($.index(vessel, "dest")) + "</b></nobr></td></tr>" : mouseOverPopup0;
    if (!($.index(vessel, "draught") == null)) {
      t1 = mouseOverPopup + "<tr><td>draught</td><td>";
      t2 = $.div($.index(vessel, "draught"), 10);
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</b></nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
    if (!($.index(vessel, "dim_bow") == null) && !($.index(vessel, "dim_port") == null)) {
      t1 = mouseOverPopup + "<tr><td>length, width</td><td>";
      t2 = $.add($.index(vessel, "dim_stern"), $.index(vessel, "dim_bow"));
      t3 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + ",";
      t4 = $.add($.index(vessel, "dim_starboard"), $.index(vessel, "dim_port"));
      mouseOverPopup0 = t3 + $.S($.getInterceptor(t4).toString$0(t4)) + "</b></nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
    if (!($.index($.get$shipTypes(), $.index(vessel, "ship_type")) == null))
      mouseOverPopup = mouseOverPopup + "<tr><td>ship_type</td><td>" + $.S($.index($.get$shipTypes(), $.index(vessel, "ship_type"))) + "</b></nobr></td></tr>";
    if (!($.index(vessel, "rot") == null)) {
      t1 = mouseOverPopup + "<tr><td>Rotation</td><td>";
      t2 = $.index(vessel, "rot");
      mouseOverPopup0 = t1 + $.S($.getInterceptor(t2).toString$0(t2)) + "</b></nobr></td></tr>";
      mouseOverPopup = mouseOverPopup0;
    }
  }
  return mouseOverPopup + "</table></div>";
};

$.onMouseoutHandler = function(e) {
  $.print("mouseoutEvent on " + $.S(e.get$type()));
};

$.calcAngle = function(vessel) {
  var hdg, cog, sog, direction;
  hdg = $.index(vessel, "true_heading");
  cog = $.index(vessel, "cog");
  $.index($.index(vessel, "pos"), 0);
  $.index($.index(vessel, "pos"), 1);
  sog = $.index(vessel, "sog");
  direction = $.eqB($.index(vessel, "mmsi"), 211855000) ? 299 : 0;
  if (!(sog == null) && $.gtB(sog, 0.4) && $.ltB(cog, 360))
    direction = cog;
  else if (!(hdg == null) && $.gtB(hdg, 0) && !$.eqB(hdg, 511) && $.ltB(hdg, 360))
    direction = hdg;
  return $.mul($.neg(direction), 0.017453292519943295);
};

$.onClickHandler = function(e, mmsi) {
  $.print("clickEvent on " + $.S(e.get$type()) + " for ship " + $.S(mmsi));
};

$.onMouseoverHandler = function(e, mmsi) {
  var vessel, pos, latlong, popupOptions;
  $.print("mouseOverEvent on " + $.S(e) + " for ship " + $.S(mmsi));
  vessel = $.index($.get$vessels(), $.S(mmsi));
  pos = $.index(vessel, "pos");
  latlong = $.Coord$($.index(pos, 1), $.index(pos, 0));
  popupOptions = $.makeLiteralMap(["closeButton", false, "autoPan", false, "offset", [0, 40]]);
  $.Popup$(latlong, $.createMouseOverPopup(vessel), popupOptions).addTo$1($.leaflet_map);
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.calcVector = function(lon, lat, sog, sinus, cosinus) {
  var dy_deg, dx_deg;
  dy_deg = $.div($.neg($.mul(sog, cosinus)), 10000);
  dx_deg = $.div($.div($.neg($.mul($.neg(sog), sinus)), $.cos($.mul(lat, 0.017453292519943295))), 10000);
  return $.Coord$($.sub(lat, dy_deg), $.sub(lon, dx_deg));
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$._LocalSendPortSync$_internal = function(_receivePort) {
  return new $._LocalSendPortSync(_receivePort);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.Icon$ = function(imageURL, dimension) {
  return new $.Icon(imageURL, dimension);
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.Coord$ = function(latitude, longitude) {
  return new $.Coord(latitude, longitude);
};

$.Polyline$ = function(vectorPoints, options) {
  var t1 = new $.Polyline(null);
  t1.Polyline$2(vectorPoints, options);
  return t1;
};

$._JsSendPortSync$ = function(_id) {
  return new $._JsSendPortSync(_id);
};

$.Proxy_Proxy = function(constructor$, arg1, arg2, arg3, arg4) {
  var t1, t2, t3, t4, arguments$;
  t1 = $ === arg1;
  if (t1)
    arg1 = null;
  t1 = !t1;
  t2 = $ === arg2;
  if (t2)
    arg2 = null;
  t2 = !t2;
  t3 = $ === arg3;
  if (t3)
    arg3 = null;
  t3 = !t3;
  t4 = $ === arg4;
  if (t4)
    arg4 = null;
  if (!t4)
    arguments$ = [arg1, arg2, arg3, arg4];
  else if (t3)
    arguments$ = [arg1, arg2, arg3];
  else if (t2)
    arguments$ = [arg1, arg2];
  else
    arguments$ = t1 ? [arg1] : [];
  return $.Proxy_Proxy$withArgList(constructor$, arguments$);
};

$.Proxy_Proxy$withArgList = function(constructor$, arguments$) {
  var t1, serialized;
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot create Proxy out of scope.");
  t1 = [constructor$];
  $.CONSTANT0.addAll$1(t1, arguments$);
  serialized = $.CONSTANT0.map$1(t1, $._serialize);
  return $._deserialize($._jsPortCreate.callSync$1(serialized));
};

$.Proxy_Proxy$_json = function(data) {
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot create Proxy out of scope.");
  return $._deserialize($._jsPortConvert.callSync$1($.Proxy__serializeDataTree(data)));
};

$.Proxy__serializeDataTree = function(data) {
  var entries, t1, t2;
  if (typeof data === 'object' && data !== null && data.is$Map()) {
    entries = $.List_List(null);
    for (t1 = data.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      entries.push([t2, $.Proxy__serializeDataTree(data.operator$index$1(t2))]);
    }
    return ["map", entries];
  } else if (typeof data === 'object' && data !== null && (data.constructor === Array || data.is$List()))
    return ["list", $.getInterceptor$JSArray(data).map$1(data, new $.Proxy__serializeDataTree_anon())];
  else
    return ["simple", $._serialize(data)];
};

$.Proxy$_internal = function(_port, _id) {
  return new $.Proxy(_port, _id);
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.JSON_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$.Proxy__forward = function(receiver, member, kind, args) {
  var result;
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot access a JavaScript proxy out of scope.");
  result = receiver._port.callSync$1([receiver._liblib1$_id, member, kind, $.getInterceptor$JSArray(args).map$1(args, $._serialize)]);
  switch ($.index(result, 0)) {
    case "return":
      return $._deserialize($.index(result, 1));
    case "throws":
      throw $.$$throw($._deserialize($.index(result, 1)));
    case "none":
      throw $.$$throw($.NoSuchMethodError$(receiver, member, args, $.makeLiteralMap([]), null));
    default:
      throw $.$$throw("Invalid return value");
  }
};

$._RemoteSendPortSync$ = function(_isolateId, _portId) {
  return new $._RemoteSendPortSync(_isolateId, _portId);
};

$._RemoteSendPortSync__call = function(isolateId, portId, message) {
  var t1, target, source, listener, t2;
  t1 = {};
  target = "dart-port-" + $.S(isolateId) + "-" + $.S(portId);
  source = target + "-result";
  t1.result_0 = null;
  listener = new $._RemoteSendPortSync__call_anon(t1);
  t2 = $.index($.window().get$on(), source);
  $.getInterceptor$JSArray(t2).add$1(t2, listener);
  $._dispatchEvent(target, [source, message]);
  $.index($.window().get$on(), source).remove$1(listener);
  return t1.result_0;
};

$.AnimatedPolygon$ = function(vectorPoints, options, vmmsi) {
  var t1 = new $.AnimatedPolygon(null);
  t1.AnimatedPolygon$3(vectorPoints, options, vmmsi);
  return t1;
};

$.CircleMarker$ = function(vectorPoint, options, vMmsi) {
  var t1 = new $.CircleMarker(null);
  t1.CircleMarker$3(vectorPoint, options, vMmsi);
  return t1;
};

$.Dimension$ = function(width, height) {
  return new $.Dimension(width, height);
};

$.Marker$ = function(latitude, longitude, tooltip, draggable) {
  var t1 = new $.Marker(null);
  t1.Marker$4(latitude, longitude, tooltip, draggable);
  return t1;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.Popup$ = function(popupOrigin, content$, options) {
  var t1 = new $.Popup(null);
  t1.Popup$3(popupOrigin, content$, options);
  return t1;
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.getInterceptor$JSStringJSArray(json).get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$._ProxiedObjectTable$ = function() {
  var t1, t2, t3, t4;
  t1 = $.makeLiteralMap([]);
  t2 = $.ReceivePortSync$();
  t3 = $.List_List(null);
  t4 = $.List_List(null);
  t4 = new $._ProxiedObjectTable("dart-ref", 0, 0, t1, t2, $.Set_Set(), t3, t4);
  t4._ProxiedObjectTable$0();
  return t4;
};

$.ReceivePortSync__isolateId = function() {
  if ($.ReceivePortSync__cachedIsolateId == null)
    $.ReceivePortSync__cachedIsolateId = $._getNewIsolateId();
  return $.ReceivePortSync__cachedIsolateId;
};

$.ReceivePortSync__getListenerName = function(isolateId, portId) {
  return "dart-port-" + $.S(isolateId) + "-" + $.S(portId);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.ReceivePortSync$ = function() {
  var t1 = new $.ReceivePortSync(null, null, null);
  t1.ReceivePortSync$0();
  return t1;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.ReceivePortSync__lookup = function(isolateId, portId) {
  if ($.eqB(isolateId, $.ReceivePortSync__isolateId()))
    return $.index($.ReceivePortSync__portMap, portId).toSendPort$0();
  else
    return $._RemoteSendPortSync$(isolateId, portId);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$._JsSerializer$ = function() {
  return new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.CONSTANT1.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$._dispatchEvent = function(receiver, message) {
  var event$ = $.CustomEvent_CustomEvent(receiver, false, false, $.JSON_stringify(message));
  $.window().$$dom_dispatchEvent$1(event$);
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.CONSTANT1.get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT0.iterator$0(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT0.iterator$0(codePoints); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(values, copies);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies;
  values = [];
  copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(new $.convertNativeToDart_AcceptStructuredClone_findSlot(values, copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies), mustCopy).call$1(object);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT2.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._globalState = function() {
  return $globalState;
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$0().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$0().deserialize$1(message);
  else
    return message;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState().set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._JsDeserializer$0 = function() {
  return new $._JsDeserializer0(null);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.log = function(x) {
  return Math.log($.checkNum(x));
};

$.Console$ = function() {
  return new $.Console();
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.getInterceptor(output).toString$0(output);
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._CustomEventFactoryProvider_createCustomEvent = function(type, canBubble, cancelable, detail) {
  var e = $.document().$$dom_createEvent$1("CustomEvent");
  e.$$dom_initCustomEvent$4(type, canBubble, cancelable, detail);
  return e;
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, length$, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$JSStringJSArray(s);
  length$ = t1.get$length(s);
  charCodes = $.List_List(null);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and(charCode, 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  t1 = $.getInterceptor$JSArray(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.WebSocket_WebSocket = function(url) {
  return new WebSocket(url);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.Callback$many = function(f) {
  var t1 = new $.Callback(null, null, null);
  t1.Callback$many$1(f);
  return t1;
};

$._FunctionProxy$_internal = function(port, id) {
  var t1 = new $._FunctionProxy(null, port, id);
  t1._FunctionProxy$_internal$2(port, id);
  return t1;
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._inject = function(code) {
  var script, t1;
  script = $.ScriptElement_ScriptElement();
  script.set$type("text/javascript");
  script.set$innerHTML(code);
  t1 = $.document().get$body().get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, script);
};

$._initialize = function(exception) {
  var t1;
  if (!($._jsPortSync == null))
    return;
  try {
  } catch (exception) {
    $.unwrapException(exception);
  }

  if ($._jsPortSync == null) {
    $._inject("(function() {\n  // Proxy support for js.dart.\n\n  var globalContext = window;\n\n  // Table for local objects and functions that are proxied.\n  function ProxiedObjectTable() {\n    // Name for debugging.\n    this.name = 'js-ref';\n\n    // Table from IDs to JS objects.\n    this.map = {};\n\n    // Generator for new IDs.\n    this._nextId = 0;\n\n    // Counter for deleted proxies.\n    this._deletedCount = 0;\n\n    // Flag for one-time initialization.\n    this._initialized = false;\n\n    // Ports for managing communication to proxies.\n    this.port = new ReceivePortSync();\n    this.sendPort = this.port.toSendPort();\n\n    // Set of IDs that are global.\n    // These will not be freed on an exitScope().\n    this.globalIds = {};\n\n    // Stack of scoped handles.\n    this.handleStack = [];\n\n    // Stack of active scopes where each value is represented by the size of\n    // the handleStack at the beginning of the scope.  When an active scope\n    // is popped, the handleStack is restored to where it was when the\n    // scope was entered.\n    this.scopeIndices = [];\n  }\n\n  // Number of valid IDs.  This is the number of objects (global and local)\n  // kept alive by this table.\n  ProxiedObjectTable.prototype.count = function () {\n    return Object.keys(this.map).length;\n  }\n\n  // Number of total IDs ever allocated.\n  ProxiedObjectTable.prototype.total = function () {\n    return this.count() + this._deletedCount;\n  }\n\n  // Adds an object to the table and return an ID for serialization.\n  ProxiedObjectTable.prototype.add = function (obj) {\n    if (this.scopeIndices.length == 0) {\n      throw \"Cannot allocate a proxy outside of a scope.\";\n    }\n    // TODO(vsm): Cache refs for each obj?\n    var ref = this.name + '-' + this._nextId++;\n    this.handleStack.push(ref);\n    this.map[ref] = obj;\n    return ref;\n  }\n\n  ProxiedObjectTable.prototype._initializeOnce = function () {\n    if (!this._initialized) {\n      this._initialize();\n      this._initialized = true;\n    }\n  }\n\n  // Enters a new scope for this table.\n  ProxiedObjectTable.prototype.enterScope = function() {\n    this._initializeOnce();\n    this.scopeIndices.push(this.handleStack.length);\n  }\n\n  // Invalidates all non-global IDs in the current scope and\n  // exit the current scope.\n  ProxiedObjectTable.prototype.exitScope = function() {\n    var start = this.scopeIndices.pop();\n    for (var i = start; i < this.handleStack.length; ++i) {\n      var key = this.handleStack[i];\n      if (!this.globalIds.hasOwnProperty(key)) {\n        delete this.map[this.handleStack[i]];\n        this._deletedCount++;\n      }\n    }\n    this.handleStack = this.handleStack.splice(0, start);\n  }\n\n  // Makes this ID globally scope.  It must be explicitly invalidated.\n  ProxiedObjectTable.prototype.globalize = function(id) {\n    this.globalIds[id] = true;\n  }\n\n  // Invalidates this ID, potentially freeing its corresponding object.\n  ProxiedObjectTable.prototype.invalidate = function(id) {\n    var old = this.get(id);\n    delete this.globalIds[id];\n    delete this.map[id];\n    this._deletedCount++;\n    return old;\n  }\n\n  // Gets the object or function corresponding to this ID.\n  ProxiedObjectTable.prototype.get = function (id) {\n    if (!this.map.hasOwnProperty(id)) {\n      throw 'Proxy ' + id + ' has been invalidated.'\n    }\n    return this.map[id];\n  }\n\n  ProxiedObjectTable.prototype._initialize = function () {\n    // Configure this table's port to forward methods, getters, and setters\n    // from the remote proxy to the local object.\n    var table = this;\n\n    this.port.receive(function (message) {\n      // TODO(vsm): Support a mechanism to register a handler here.\n      try {\n        var receiver = table.get(message[0]);\n        var member = message[1];\n        var kind = message[2];\n        var args = message[3].map(deserialize);\n        if (kind == 'get') {\n          // Getter.\n          var field = member;\n          if (field in receiver && args.length == 0) {\n            return [ 'return', serialize(receiver[field]) ];\n          }\n        } else if (kind == 'set') {\n          // Setter.\n          var field = member;\n          if (args.length == 1) {\n            return [ 'return', serialize(receiver[field] = args[0]) ];\n          }\n        } else if (kind == 'apply') {\n          // Direct function invocation.\n          // TODO(vsm): Should we capture _this_ automatically?\n          return [ 'return', serialize(receiver.apply(null, args)) ];\n        } else if (member == '[]' && args.length == 1) {\n          // Index getter.\n          return [ 'return', serialize(receiver[args[0]]) ];\n        } else if (member == '[]=' && args.length == 2) {\n          // Index setter.\n          return [ 'return', serialize(receiver[args[0]] = args[1]) ];\n        } else {\n          var f = receiver[member];\n          if (f) {\n            var result = f.apply(receiver, args);\n            return [ 'return', serialize(result) ];\n          }\n        }\n        return [ 'none' ];\n      } catch (e) {\n        return [ 'throws', e.toString() ];\n      }\n    });\n  }\n\n  // Singleton for local proxied objects.\n  var proxiedObjectTable = new ProxiedObjectTable();\n\n  // DOM element serialization code.\n  var _localNextElementId = 0;\n  var _DART_ID = 'data-dart_id';\n  var _DART_TEMPORARY_ATTACHED = 'data-dart_temporary_attached';\n\n  function serializeElement(e) {\n    // TODO(vsm): Use an isolate-specific id.\n    var id;\n    if (e.hasAttribute(_DART_ID)) {\n      id = e.getAttribute(_DART_ID);\n    } else {\n      id = (_localNextElementId++).toString();\n      e.setAttribute(_DART_ID, id);\n    }\n    if (e !== document.documentElement) {\n      // Element must be attached to DOM to be retrieve in js part.\n      // Attach top unattached parent to avoid detaching parent of \"e\" when\n      // appending \"e\" directly to document. We keep count of elements\n      // temporarily attached to prevent detaching top unattached parent to\n      // early. This count is equals to the length of _DART_TEMPORARY_ATTACHED\n      // attribute. There could be other elements to serialize having the same\n      // top unattached parent.\n      var top = e;\n      while (true) {\n        if (top.hasAttribute(_DART_TEMPORARY_ATTACHED)) {\n          var oldValue = top.getAttribute(_DART_TEMPORARY_ATTACHED);\n          var newValue = oldValue + \"a\";\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, newValue);\n          break;\n        }\n        if (top.parentNode == null) {\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, \"a\");\n          document.documentElement.appendChild(top);\n          break;\n        }\n        if (top.parentNode === document.documentElement) {\n          // e was already attached to dom\n          break;\n        }\n        top = top.parentNode;\n      }\n    }\n    return id;\n  }\n\n  function deserializeElement(id) {\n    // TODO(vsm): Clear the attribute.\n    var list = document.querySelectorAll('[' + _DART_ID + '=\"' + id + '\"]');\n\n    if (list.length > 1) throw 'Non unique ID: ' + id;\n    if (list.length == 0) {\n      throw 'Element must be attached to the document: ' + id;\n    }\n    var e = list[0];\n    if (e !== document.documentElement) {\n      // detach temporary attached element\n      var top = e;\n      while (true) {\n        if (top.hasAttribute(_DART_TEMPORARY_ATTACHED)) {\n          var oldValue = top.getAttribute(_DART_TEMPORARY_ATTACHED);\n          var newValue = oldValue.substring(1);\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, newValue);\n          // detach top only if no more elements have to be unserialized\n          if (top.getAttribute(_DART_TEMPORARY_ATTACHED).length === 0) {\n            top.removeAttribute(_DART_TEMPORARY_ATTACHED);\n            document.documentElement.removeChild(top);\n          }\n          break;\n        }\n        if (top.parentNode === document.documentElement) {\n          // e was already attached to dom\n          break;\n        }\n        top = top.parentNode;\n      }\n    }\n    return e;\n  }\n\n\n  // Type for remote proxies to Dart objects.\n  function DartProxy(id, sendPort) {\n    this.id = id;\n    this.port = sendPort;\n  }\n\n  // Serializes JS types to SendPortSync format:\n  // - primitives -> primitives\n  // - sendport -> sendport\n  // - DOM element -> [ 'domref', element-id ]\n  // - Function -> [ 'funcref', function-id, sendport ]\n  // - Object -> [ 'objref', object-id, sendport ]\n  function serialize(message) {\n    if (message == null) {\n      return null;  // Convert undefined to null.\n    } else if (typeof(message) == 'string' ||\n               typeof(message) == 'number' ||\n               typeof(message) == 'boolean') {\n      // Primitives are passed directly through.\n      return message;\n    } else if (message instanceof SendPortSync) {\n      // Non-proxied objects are serialized.\n      return message;\n    } else if (message instanceof Element &&\n        (message.ownerDocument == null || message.ownerDocument == document)) {\n      return [ 'domref', serializeElement(message) ];\n    } else if (typeof(message) == 'function') {\n      if ('_dart_id' in message) {\n        // Remote function proxy.\n        var remoteId = message._dart_id;\n        var remoteSendPort = message._dart_port;\n        return [ 'funcref', remoteId, remoteSendPort ];\n      } else {\n        // Local function proxy.\n        return [ 'funcref',\n                 proxiedObjectTable.add(message),\n                 proxiedObjectTable.sendPort ];\n      }\n    } else if (message instanceof DartProxy) {\n      // Remote object proxy.\n      return [ 'objref', message.id, message.port ];\n    } else {\n      // Local object proxy.\n      return [ 'objref',\n               proxiedObjectTable.add(message),\n               proxiedObjectTable.sendPort ];\n    }\n  }\n\n  function deserialize(message) {\n    if (message == null) {\n      return null;  // Convert undefined to null.\n    } else if (typeof(message) == 'string' ||\n               typeof(message) == 'number' ||\n               typeof(message) == 'boolean') {\n      // Primitives are passed directly through.\n      return message;\n    } else if (message instanceof SendPortSync) {\n      // Serialized type.\n      return message;\n    }\n    var tag = message[0];\n    switch (tag) {\n      case 'funcref': return deserializeFunction(message);\n      case 'objref': return deserializeObject(message);\n      case 'domref': return deserializeElement(message[1]);\n    }\n    throw 'Unsupported serialized data: ' + message;\n  }\n\n  // Create a local function that forwards to the remote function.\n  function deserializeFunction(message) {\n    var id = message[1];\n    var port = message[2];\n    // TODO(vsm): Add a more robust check for a local SendPortSync.\n    if (\"receivePort\" in port) {\n      // Local function.\n      return proxiedObjectTable.get(id);\n    } else {\n      // Remote function.  Forward to its port.\n      var f = function () {\n        var depth = enterScope();\n        try {\n          var args = Array.prototype.slice.apply(arguments).map(serialize);\n          var result = port.callSync([id, '#call', args]);\n          if (result[0] == 'throws') throw deserialize(result[1]);\n          return deserialize(result[1]);\n        } finally {\n          exitScope(depth);\n        }\n      };\n      // Cache the remote id and port.\n      f._dart_id = id;\n      f._dart_port = port;\n      return f;\n    }\n  }\n\n  // Creates a DartProxy to forwards to the remote object.\n  function deserializeObject(message) {\n    var id = message[1];\n    var port = message[2];\n    // TODO(vsm): Add a more robust check for a local SendPortSync.\n    if (\"receivePort\" in port) {\n      // Local object.\n      return proxiedObjectTable.get(id);\n    } else {\n      // Remote object.\n      return new DartProxy(id, port);\n    }\n  }\n\n  // Instantiate a Date with arguments.\n  function instantiateDate(args) {\n    // 7 arguments because the longest constructor is : new Date(year, month,\n    // day, hour, minute, second, millisecond)\n    if (args.length === 0) {\n      return new Date();\n    } else if (args.length === 1) {\n      return new Date(args[0]);\n    } else if (args.length === 2) {\n      return new Date(args[0], args[1]);\n    } else if (args.length === 3) {\n      return new Date(args[0], args[1], args[2]);\n    } else if (args.length === 4) {\n      return new Date(args[0], args[1], args[2], args[3]);\n    } else if (args.length === 5) {\n      return new Date(args[0], args[1], args[2], args[3], args[4]);\n    } else if (args.length === 6) {\n      return new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\n    } else if (args.length === 7) {\n      return new Date(args[0], args[1], args[2], args[3], args[4], args[5],\n                     args[6]);\n    }\n    return null;\n  }\n\n  // Remote handler to construct a new JavaScript object given its\n  // serialized constructor and arguments.\n  function construct(args) {\n    args = args.map(deserialize);\n    var constructor = args[0];\n    args = Array.prototype.slice.call(args, 1);\n\n    var ret = null;\n    // Date can only be instantiated with the new operator.\n    if (constructor === Date) {\n      ret = instantiateDate(args);\n    } else {\n      // Dummy Type with correct constructor.\n      var Type = function(){};\n      Type.prototype = constructor.prototype;\n  \n      // Create a new instance\n      var instance = new Type();\n  \n      // Call the original constructor.\n      ret = constructor.apply(instance, args);\n      ret = Object(ret) === ret ? ret : instance;\n    }\n    return serialize(ret);\n  }\n\n  // Remote handler to return the top-level JavaScript context.\n  function context(data) {\n    return serialize(globalContext);\n  }\n\n  // Remote handler for debugging.\n  function debug() {\n    var live = proxiedObjectTable.count();\n    var total = proxiedObjectTable.total();\n    return 'JS objects Live : ' + live +\n           ' (out of ' + total + ' ever allocated).';\n  }\n\n  // Return true if two JavaScript proxies are equal (==).\n  function proxyEquals(args) {\n    return deserialize(args[0]) == deserialize(args[1]);\n  }\n\n  // Return true if a JavaScript proxy is instance of a given type (instanceof).\n  function proxyInstanceof(args) {\n    return deserialize(args[0]) instanceof deserialize(args[1]);\n  }\n\n  function proxyConvert(args) {\n    return serialize(deserializeDataTree(args));\n  }\n\n  function deserializeDataTree(data) {\n    var type = data[0];\n    var value = data[1];\n    if (type === 'map') {\n      var obj = {};\n      for (var i = 0; i < value.length; i++) {\n        obj[value[i][0]] = deserializeDataTree(value[i][1]);\n      }\n      return obj;\n    } else if (type === 'list') {\n      var list = [];\n      for (var i = 0; i < value.length; i++) {\n        list.push(deserializeDataTree(value[i]));\n      }\n      return list;\n    } else /* 'simple' */ {\n      return deserialize(value);\n    }\n  }\n\n  function makeGlobalPort(name, f) {\n    var port = new ReceivePortSync();\n    port.receive(f);\n    window.registerPort(name, port.toSendPort());\n  }\n\n  // Enters a new scope in the JavaScript context.\n  function enterJavaScriptScope() {\n    proxiedObjectTable.enterScope();\n  }\n\n  // Enters a new scope in both the JavaScript and Dart context.\n  var _dartEnterScopePort = null;\n  function enterScope() {\n    enterJavaScriptScope();\n    if (!_dartEnterScopePort) {\n      _dartEnterScopePort = window.lookupPort('js-dart-enter-scope');\n    }\n    return _dartEnterScopePort.callSync([]);\n  }\n\n  // Exits the current scope (and invalidate local IDs) in the JavaScript\n  // context.\n  function exitJavaScriptScope() {\n    proxiedObjectTable.exitScope();\n  }\n\n  // Exits the current scope in both the JavaScript and Dart context.\n  var _dartExitScopePort = null;\n  function exitScope(depth) {\n    exitJavaScriptScope();\n    if (!_dartExitScopePort) {\n      _dartExitScopePort = window.lookupPort('js-dart-exit-scope');\n    }\n    return _dartExitScopePort.callSync([ depth ]);\n  }\n\n  makeGlobalPort('dart-js-context', context);\n  makeGlobalPort('dart-js-create', construct);\n  makeGlobalPort('dart-js-debug', debug);\n  makeGlobalPort('dart-js-equals', proxyEquals);\n  makeGlobalPort('dart-js-instanceof', proxyInstanceof);\n  makeGlobalPort('dart-js-convert', proxyConvert);\n  makeGlobalPort('dart-js-enter-scope', enterJavaScriptScope);\n  makeGlobalPort('dart-js-exit-scope', exitJavaScriptScope);\n  makeGlobalPort('dart-js-globalize', function(data) {\n    if (data[0] == \"objref\") return proxiedObjectTable.globalize(data[1]);\n    // TODO(vsm): Do we ever need to globalize functions?\n    throw 'Illegal type: ' + data[0];\n  });\n  makeGlobalPort('dart-js-invalidate', function(data) {\n    if (data[0] == \"objref\") return proxiedObjectTable.invalidate(data[1]);\n    // TODO(vsm): Do we ever need to globalize functions?\n    throw 'Illegal type: ' + data[0];\n  });\n})();\n");
    $._jsPortSync = $.window().lookupPort$1("dart-js-context");
  }
  $._jsPortCreate = $.window().lookupPort$1("dart-js-create");
  $._jsPortDebug = $.window().lookupPort$1("dart-js-debug");
  $._jsPortEquals = $.window().lookupPort$1("dart-js-equals");
  $._jsPortInstanceof = $.window().lookupPort$1("dart-js-instanceof");
  $._jsPortConvert = $.window().lookupPort$1("dart-js-convert");
  $._jsEnterJavaScriptScope = $.window().lookupPort$1("dart-js-enter-scope");
  $._jsExitJavaScriptScope = $.window().lookupPort$1("dart-js-exit-scope");
  $._jsGlobalize = $.window().lookupPort$1("dart-js-globalize");
  $._jsInvalidate = $.window().lookupPort$1("dart-js-invalidate");
  t1 = $.ReceivePortSync$();
  t1.receive$1(new $._initialize_anon());
  $._dartEnterDartScope = t1;
  t1 = $.ReceivePortSync$();
  t1.receive$1(new $._initialize_anon0());
  $._dartExitDartScope = t1;
  $.window().registerPort$2("js-dart-enter-scope", $._dartEnterDartScope.toSendPort$0());
  $.window().registerPort$2("js-dart-exit-scope", $._dartExitDartScope.toSendPort$0());
};

$.scoped = function(f) {
  var depth, t1;
  depth = $._enterScope();
  try {
    t1 = f.call$0();
    return t1;
  } finally {
    $._exitScope(depth);
  }
};

$._enterScope = function() {
  $._initialize();
  $.get$_proxiedObjectTable().enterScope$0();
  $._jsEnterJavaScriptScope.callSync$1([]);
  var t1 = $.get$_proxiedObjectTable().get$_scopeIndices();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
};

$._exitScope = function(depth) {
  $._jsExitJavaScriptScope.callSync$1([]);
  $.get$_proxiedObjectTable().exitScope$0();
};

$.retain = function(proxy) {
  $._jsGlobalize.callSync$1($._serialize(proxy));
  return proxy;
};

$._depth = function() {
  var t1 = $.get$_proxiedObjectTable().get$_scopeIndices();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
};

$.map = function(data) {
  return $.Proxy_Proxy$_json(data);
};

$._serialize = function(message) {
  var t1, proxy;
  if (message == null)
    return;
  else if (typeof message === 'string' || typeof message === 'number' || typeof message === 'boolean')
    return message;
  else if (typeof message === 'object' && message !== null && !!message.is$SendPortSync)
    return message;
  else {
    if (typeof message === 'object' && message !== null && message.is$Element()) {
      t1 = message.ownerDocument;
      t1 = t1 == null || $.eqB(t1, $.document());
    } else
      t1 = false;
    if (t1)
      return ["domref", $._serializeElement(message)];
    else if (typeof message === 'object' && message !== null && !!message.is$Callback)
      return message.get$_serialized();
    else if (typeof message === 'function' || typeof message === 'object' && message !== null && !!message.is$Function)
      if ($.get$_FunctionProxy__map().containsKey$1(message) === true) {
        proxy = $.index($.get$_FunctionProxy__map(), message);
        return ["funcref", proxy.get$_liblib1$_id(), proxy.get$_port()];
      } else
        throw $.$$throw("A function must be converted to a Callback before it can be serialized.");
    else if (typeof message === 'object' && message !== null && !!message.is$Proxy)
      return ["objref", message._liblib1$_id, message._port];
    else {
      t1 = $.get$_proxiedObjectTable();
      return ["objref", $.getInterceptor$JSArray(t1).add$1(t1, message), $.get$_proxiedObjectTable().get$sendPort()];
    }
  }
};

$.array = function(list) {
  return $.Proxy_Proxy$_json(list);
};

$._deserialize = function(message) {
  var t1, t2;
  t1 = new $._deserialize_deserializeFunction();
  t2 = new $._deserialize_deserializeObject();
  if (message == null)
    return;
  else if (typeof message === 'string' || typeof message === 'number' || typeof message === 'boolean')
    return message;
  else if (typeof message === 'object' && message !== null && !!message.is$SendPortSync)
    return message;
  switch ($.index(message, 0)) {
    case "funcref":
      return t1.call$1(message);
    case "objref":
      return t2.call$1(message);
    case "domref":
      return $._deserializeElement($.index(message, 1));
  }
  throw $.$$throw("Unsupported serialized data: " + $.S(message));
};

$._serializeElement = function(e) {
  var id, t1, top$, oldValue, newValue, t2;
  if (e.get$attributes().containsKey$1("data-dart_id") === true)
    id = $.index(e.get$attributes(), "data-dart_id");
  else {
    t1 = $._localNextElementId;
    $._localNextElementId = $.add(t1, 1);
    id = "dart-" + $.S(t1);
    $.indexSet(e.get$attributes(), "data-dart_id", id);
  }
  t1 = $.document().get$documentElement();
  if (!(e == null ? t1 == null : e === t1))
    for (top$ = e; true;) {
      if (top$.get$attributes().containsKey$1("data-dart_temporary_attached") === true) {
        oldValue = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        newValue = $.getInterceptor$JSString(oldValue).concat$1(oldValue, "a");
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", newValue);
        break;
      }
      if (top$.get$parent() == null) {
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", "a");
        t1 = $.document().get$documentElement().get$elements();
        $.getInterceptor$JSArray(t1).add$1(t1, top$);
        break;
      }
      t1 = top$.get$parent();
      t2 = $.document().get$documentElement();
      if (t1 == null ? t2 == null : t1 === t2)
        break;
      top$ = top$.get$parent();
    }
  return id;
};

$._deserializeElement = function(id) {
  var list, t1, e, top$, oldValue, newValue, t2;
  list = $.queryAll("[data-dart_id=\"" + $.S(id) + "\"]");
  t1 = $.getInterceptor$JSStringJSArray(list);
  if ($.gtB(t1.get$length(list), 1))
    throw $.$$throw("Non unique ID: " + $.S(id));
  if ($.eqB(t1.get$length(list), 0))
    throw $.$$throw("Only elements attached to document can be serialized: " + $.S(id));
  e = $.index(list, 0);
  t1 = $.document().get$documentElement();
  if (!(e == null ? t1 == null : e === t1))
    for (top$ = e; true;) {
      if (top$.get$attributes().containsKey$1("data-dart_temporary_attached") === true) {
        oldValue = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        newValue = $.getInterceptor$JSString(oldValue).substring$1(oldValue, 1);
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", newValue);
        t1 = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0)) {
          top$.get$attributes().remove$1("data-dart_temporary_attached");
          top$.remove$0();
        }
        break;
      }
      t1 = top$.get$parent();
      t2 = $.document().get$documentElement();
      if (t1 == null ? t2 == null : t1 === t2)
        break;
      top$ = top$.get$parent();
    }
  return e;
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!$.isJsArray(charCodes))
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(null);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.context = function() {
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot get JavaScript context out of scope.");
  return $._deserialize($._jsPortSync.callSync$1([]));
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.RtcDataChannelEvents$ = function(_ptr) {
  return new $.RtcDataChannelEvents(_ptr);
};

$.RtcPeerConnectionEvents$ = function(_ptr) {
  return new $.RtcPeerConnectionEvents(_ptr);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$.CustomEvent_CustomEvent = function(type, canBubble, cancelable, detail) {
  return $._CustomEventFactoryProvider_createCustomEvent(type, canBubble, cancelable, detail);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DatabaseEvents$ = function(_ptr) {
  return new $.DatabaseEvents(_ptr);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.OpenDBRequestEvents$ = function(_ptr) {
  return new $.OpenDBRequestEvents(_ptr);
};

$.RequestEvents$ = function(_ptr) {
  return new $.RequestEvents(_ptr);
};

$.TransactionEvents$ = function(_ptr) {
  return new $.TransactionEvents(_ptr);
};

$.VersionChangeRequestEvents$ = function(_ptr) {
  return new $.VersionChangeRequestEvents(_ptr);
};

$.ApplicationCacheEvents$ = function(_ptr) {
  return new $.ApplicationCacheEvents(_ptr);
};

$.OpenStreetMap$ = function(elementid, mapOptions, height, width) {
  var t1 = new $.OpenStreetMap(null, null, null, null, null, null, null, null, null, null);
  t1.LeafletMap$3$height$width(elementid, height, width);
  t1.OpenStreetMap$4$height$width(elementid, mapOptions, height, width);
  return t1;
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.ScriptElement_ScriptElement = function() {
  return $.document().$$dom_createElement$1("script");
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var t2, completer, result, values, i, future;
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT7);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List(t2.get$length(futures));
  for (i = 0; $.ltB(i, t2.get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(t1, result, i, values, completer));
    future.handleException$1(new $.Futures_wait_anon0(result, future, completer));
  }
  return result;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.processVesselsInBounds$bailout = function(state0, jsonArray, currentZoom) {
  var t2, t1;
  t2 = $.get$vessels();
  $.getInterceptor$JSArray(t2).forEach$1(t2, new $.processVesselsInBounds_anon());
  t2 = $.get$vessels();
  $.getInterceptor$JSArray(t2).clear$0(t2);
  $.leaflet_map.clearFeatureLayer$0();
  for (t1 = $.getInterceptor$JSArray(jsonArray).iterator$0(jsonArray); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.paintToMap(t2, new $.processVesselsInBounds_anon0(currentZoom, t2));
  }
  if ($.gtB(currentZoom, 13)) {
    t1 = "vessels reporting > " + $.S($.index($.get$zoomSpeedArray(), currentZoom)) + " knots";
    $.query("#zoomSpeed").set$text(t1);
    $.query("#zoomSpeed").get$style().set$display("block");
  } else
    $.query("#zoomSpeed").get$style().set$display("none");
};

$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$._serialize.call$1 = $._serialize;
$._serialize.$name = "_serialize";
$._deserialize.call$1 = $._deserialize;
$._deserialize.$name = "_deserialize";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CONSTANT4 = new Isolate.$isolateProperties.JSInt();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT7 = Isolate.makeConstantList([]);
$.CONSTANT2 = new Isolate.$isolateProperties.JSString();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT6 = new Isolate.$isolateProperties.Object();
$.CONSTANT5 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CONSTANT7);
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT0 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT1 = new Isolate.$isolateProperties.JSNumber();
$._cachedBrowserPrefix = null;
$._jsPortSync = null;
$._jsPortEquals = null;
$._jsPortInstanceof = null;
$._jsPortConvert = null;
$._jsEnterJavaScriptScope = null;
$._jsExitJavaScriptScope = null;
$._jsGlobalize = null;
$._jsPortCreate = null;
$._jsInvalidate = null;
$._jsPortDebug = null;
$._dartEnterDartScope = null;
$._dartExitDartScope = null;
$._localNextElementId = 0;
$._DART_ID = "data-dart_id";
$._DART_TEMPORARY_ATTACHED = "data-dart_temporary_attached";
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$.PI = 3.141592653589793;
$._JsonParser_QUOTE = 34;
$._JsonParser_PLUS = 43;
$._JsonParser_COMMA = 44;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_4 = 52;
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_6 = 54;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$._JsonParser_CHAR_CAPITAL_E = 69;
$._JsonParser_LBRACKET = 91;
$._JsonParser_BACKSLASH = 92;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_B = 98;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_N = 110;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_TRUE_LITERAL = 116;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._JsonParser_NULL_STRING = "null";
$._JsonParser_TRUE_STRING = "true";
$._JsonParser_FALSE_STRING = "false";
$._JsonParser_tokens = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.ReceivePortSync__portMap = null;
$.ReceivePortSync__portIdCount = null;
$.ReceivePortSync__cachedIsolateId = null;
$.JSInvocationMirror_METHOD = 0;
$.JSInvocationMirror_GETTER = 1;
$.JSInvocationMirror_SETTER = 2;
$.leaflet_map = null;
$.socket = null;
$.Primitives_hashCodeSeed = 0;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'nav_stati', 'nav_stati', 'get$nav_stati', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'aton_types', 'aton_types', 'get$aton_types', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'zoomSpeedArray', 'zoomSpeedArray', 'get$zoomSpeedArray', function() {
  return [20, 20, 20, 20, 20, 20, 16, 12, 8, 4, 2, 1, 0.1, -1, -1, -1, -1, -1, -1];
});
Isolate.$lazy($, '_proxiedObjectTable', '_proxiedObjectTable', 'get$_proxiedObjectTable', function() {
  return $._ProxiedObjectTable$();
});
Isolate.$lazy($, '_map', '_FunctionProxy__map', 'get$_FunctionProxy__map', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, 'safeConsole', 'Console_safeConsole', 'get$Console_safeConsole', function() {
  return $.Console$();
});
Isolate.$lazy($, 'vessels', 'vessels', 'get$vessels', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'shipTypes', 'shipTypes', 'get$shipTypes', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'shipTypeColors', 'shipTypeColors', 'get$shipTypeColors', function() {
  return $.Map_Map();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$List: function() { return false; },
 is$File: function() { return false; },
 is$KeyRange: function() { return false; },
 is$Blob: function() { return false; },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$Map: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$FileList: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Element: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.AbstractWorkerEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', {"":"type=",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"height>,width>"
});

$.$defineNativeClass('DOMApplicationCache', {
 get$on: function() {
  return $.ApplicationCacheEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('ArrayBuffer', {
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"":"value="
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
}
});

$.$defineNativeClass('BatteryManager', {
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Blob', {"":"type>",
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"type=,value="
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height>,width>"
});

$.$defineNativeClass('CharacterData', {"":"data>,length>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"":"height>,width>"
});

$.$defineNativeClass('CompositionEvent', {"":"data>"
});

$.$defineNativeClass('Coordinates', {"":"latitude>,longitude>"
});

$.$defineNativeClass('CSSFontFaceRule', {"":"style>"
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"":"style>"
});

$.$defineNativeClass('WebKitCSSMatrix', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', {"":"style>"
});

$.$defineNativeClass('CSSRule', {"":"type>"
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length>",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
}
});

$.$defineNativeClass('CSSStyleRule', {"":"style>"
});

$.$defineNativeClass('CustomEvent', {"":"detail>",
 $$dom_initCustomEvent$4: function(typeArg, canBubbleArg, cancelableArg, detailArg) {
  return this.initCustomEvent(typeArg,canBubbleArg,cancelableArg,detailArg);
}
});

$.$defineNativeClass('DataTransferItem', {"":"type>"
});

$.$defineNativeClass('DataTransferItemList', {"":"length>",
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DedicatedWorkerContext', {
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($.convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($.convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message, $);
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', {"":"open>"
});

$.$defineNativeClass('Document', {"":"$$dom_body:body~,documentElement>",
 get$on: function() {
  return $.DocumentEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_createEvent$1: function(eventType) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_createEvent$1')) {
    return this.createEvent(eventType);
  } else {
    return Object.prototype.$$dom_createEvent$1.call(this, eventType);
  }
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $$dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.CONSTANT2.substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  var mutableMatches, len, copyOfMatches, t1, i;
  if ($.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT2.substring$2(selectors, 7, selectors.length - 2));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(3, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      len = env1;
      mutableMatches = env0;
      break;
    case 3:
      mutableMatches = env0;
      break;
    case 4:
      mutableMatches = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var mutableMatches, len, copyOfMatches, i, t1;
      if (state0 === 2 || state0 === 1 || state0 === 0 && $.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT2.substring$2(selectors, 7, selectors.length - 2));
          case 1:
            state0 = 0;
            len = $.getInterceptor$JSStringJSArray(mutableMatches).get$length(mutableMatches);
          case 2:
            state0 = 0;
            copyOfMatches = $.List_List(len);
            for (i = 0; $.ltB(i, len); ++i) {
              t1 = $.index(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                case 3:
                  state0 = 0;
                  len = $.getInterceptor$JSStringJSArray(mutableMatches).get$length(mutableMatches);
                case 4:
                  state0 = 0;
                  copyOfMatches = $.List_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = $.index(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
        }
  }
}
});

$.$defineNativeClass('DocumentFragment', {
 get$elements: function() {
  return this.get$children();
},
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 set$innerHtml: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHtml')) {
    var t1, e, nodes;
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    e = $.Element_Element$tag("div");
    e.set$innerHtml(value);
    nodes = $.List_List$from(e.get$nodes());
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
  } else {
    return Object.prototype.set$innerHtml.call(this, value);
  }
},
 get$id: function() {
  return "";
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CONSTANT5;
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('MimeType', {"":"type>"
});

$.$defineNativeClass('MimeTypeArray', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Plugin', {"":"length>"
});

$.$defineNativeClass('PluginArray', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"":"type>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"":"value="
});

$.$defineNativeClass('DOMStringList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', {"":"length>",
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"$$dom_children:children~,id>,innerHtml:innerHTML|,$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,style>",
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$innerHTML: function(value) {
  this.set$innerHtml(value);
},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
    return this.get$children();
  } else {
    return Object.prototype.get$elements.call(this);
  }
},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  } else {
    return Object.prototype.set$children.call(this, value);
  }
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height>,type=,width>"
});

$.$defineNativeClass('Entry', {
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"":"message>"
});

$.$defineNativeClass('Event', {"":"type>"
});

$.$defineNativeClass('EventException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $$dom_dispatchEvent$1: function(event) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_dispatchEvent$1')) {
    return this.dispatchEvent(event);
  } else {
    return Object.prototype.$$dom_dispatchEvent$1.call(this, event);
  }
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {"":"elements>,type>"
});

$.$defineNativeClass('File', {
 is$File: function() { return true; }
});

$.$defineNativeClass('FileException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileReader', {"":"error>",
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', {"":"error>,length>",
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"":"length>"
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"":"length>",
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('HTMLFrameElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('Gamepad', {"":"id>"
});

$.$defineNativeClass('HTMLHRElement', {"":"width>"
});

$.$defineNativeClass('HTMLAllCollection', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
}
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequest', {
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 get$open: function() {
  return new $.BoundClosure1(this, 'open$5');
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestUpload', {
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height>,width>"
});

$.$defineNativeClass('ImageData', {"":"data>,height>,width>",
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"":"height>,width>",
 complete$1: function(arg0) {
  return this.complete.call$1(arg0);
}
});

$.$defineNativeClass('HTMLInputElement', {"":"height>,pattern>,type=,value=,width>",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"":"type>"
});

$.$defineNativeClass('HTMLKeygenElement', {"":"type>"
});

$.$defineNativeClass('HTMLLIElement', {"":"type=,value="
});

$.$defineNativeClass('HTMLLinkElement', {"":"type="
});

$.$defineNativeClass('History', {"":"length>"
});

$.$defineNativeClass('Location', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', {
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('DOMWindow', {"":"innerHeight>,innerWidth>,navigator>",
 get$document: function() {
  return this.document;
},
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 get$open: function() {
  return new $.BoundClosure2(this, 'open$3');
},
 lookupPort$1: function(name$) {
  var port = $.JSON_parse($.index(this.get$document().get$documentElement().get$attributes(), "dart-port:" + name$));
  return $._JsDeserializer$().deserialize$1(port);
},
 registerPort$2: function(name$, port) {
  var serialized = $._JsSerializer$().traverse$1(port);
  $.indexSet(this.get$document().get$documentElement().get$attributes(), "dart-port:" + name$, $.JSON_stringify(serialized));
},
 get$console: function() {
  return $.get$Console_safeConsole();
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.parent);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height>,width>",
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('MediaController', {
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"":"error>",
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('MediaKeyEvent', {"":"message>"
});

$.$defineNativeClass('MediaList', {"":"length>"
});

$.$defineNativeClass('MediaSource', {
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrack', {
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', {"":"length>",
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 add$1: function(track) {
  return this.add(track);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MessageEvent', {"":"ports>",
 get$data: function() {
  return $.convertNativeToDart_SerializedScriptValue(this.data);
}
});

$.$defineNativeClass('MessagePort', {
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($.convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($.convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message, $);
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
}
});

$.$defineNativeClass('HTMLMeterElement', {"":"value="
});

$.$defineNativeClass('MutationRecord', {"":"type>"
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent>"
});

$.$defineNativeClass('Node', {"":"$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,parent:parentElement~,text:textContent|",
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.parentNode;
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', {
 filter$1: function(arg0) {
  return this.filter.call$1(arg0);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notification', {
 get$on: function() {
  return $.NotificationEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', {"":"type=",
 start$0: function() {
  return this.start.call$0();
}
});

$.$defineNativeClass('HTMLObjectElement', {"":"data>,height>,type=,width>"
});

$.$defineNativeClass('HTMLOptionElement', {"":"value="
});

$.$defineNativeClass('HTMLOutputElement', {"":"type>,value="
});

$.$defineNativeClass('HTMLParamElement', {"":"type=,value="
});

$.$defineNativeClass('PeerConnection00', {
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('PerformanceNavigation', {"":"type>"
});

$.$defineNativeClass('PositionError', {"":"message>"
});

$.$defineNativeClass('HTMLPreElement', {"":"width>"
});

$.$defineNativeClass('ProcessingInstruction', {"":"data>"
});

$.$defineNativeClass('HTMLProgressElement', {"":"value="
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('Range', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RTCDataChannel', {
 get$on: function() {
  return $.RtcDataChannelEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('RTCPeerConnection', {
 get$on: function() {
  return $.RtcPeerConnectionEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"":"type="
});

$.$defineNativeClass('Screen', {"":"height>,width>"
});

$.$defineNativeClass('HTMLScriptElement', {"":"type="
});

$.$defineNativeClass('ScriptProfileNode', {
 children$0: function() {
  return this.children();
},
 get$children: function() {
  return new $.BoundClosure0(this, 'children$0');
}
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,type>,value="
});

$.$defineNativeClass('ShadowRoot', {"":"innerHtml:innerHTML|"
});

$.$defineNativeClass('SharedWorkerContext', {
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('SourceBufferList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"":"type="
});

$.$defineNativeClass('SpeechGrammarList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognition', {
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('SpeechRecognitionError', {"":"message>"
});

$.$defineNativeClass('SpeechRecognitionResult', {"":"length>"
});

$.$defineNativeClass('SQLError', {"":"message>"
});

$.$defineNativeClass('SQLException', {"":"message>"
});

$.$defineNativeClass('SQLResultSetRowList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key>"
});

$.$defineNativeClass('HTMLStyleElement', {"":"type="
});

$.$defineNativeClass('StyleMedia', {"":"type>"
});

$.$defineNativeClass('StyleSheet', {"":"type>"
});

$.$defineNativeClass('HTMLTableCellElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLTableColElement', {"":"width>"
});

$.$defineNativeClass('HTMLTableElement', {"":"width>"
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"type>,value="
});

$.$defineNativeClass('TextEvent', {"":"data>"
});

$.$defineNativeClass('TextMetrics', {"":"width>"
});

$.$defineNativeClass('TextTrack', {
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"":"id>,text<",
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"":"length>"
});

$.$defineNativeClass('TouchList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TreeWalker', {
 filter$1: function(arg0) {
  return this.filter.call$1(arg0);
}
});

$.$defineNativeClass('UIEvent', {"":"detail>"
});

$.$defineNativeClass('HTMLUListElement', {"":"type="
});

$.$defineNativeClass('Uint16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height>,width>"
});

$.$defineNativeClass('WebGLActiveInfo', {"":"type>"
});

$.$defineNativeClass('WebKitNamedFlow', {
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure3(this, 'close$2');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('Worker', {
 get$on: function() {
  return $.WorkerEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($.convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($.convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message, $);
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"":"navigator>",
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.WorkerContextEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"":"userAgent>"
});

$.$defineNativeClass('XPathException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('ClientRectList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSRuleList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArray', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('IDBCursor', {"":"key>"
});

$.$defineNativeClass('IDBCursorWithValue', {"":"value>"
});

$.$defineNativeClass('IDBDatabase', {
 get$on: function() {
  return $.DatabaseEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {
 open$2: function(name, version) {
  return this.open(name,version);
},
 get$open: function() {
  return new $.BoundClosure4(this, 'open$2');
}
});

$.$defineNativeClass('IDBIndex', {
 get$1: function(key) {
  var t1, t2;
  t1 = $ === key;
  if (t1)
    key = null;
  t1 = !t1;
  if (t1)
    t2 = typeof key === 'object' && key !== null && key.is$KeyRange() || key == null;
  else
    t2 = false;
  if (t2)
    return this._get_1$1(key);
  if (t1)
    return this._get_2$1(key);
  throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
},
 _get_1$1: function(key) {
  return this.get(key);
},
 _get_2$1: function(key) {
  return this.get(key);
}
});

$.$defineNativeClass('IDBKeyRange', {
 is$KeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($.convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($.convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value, $);
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {
 get$on: function() {
  return $.OpenDBRequestEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('IDBRequest', {"":"error>",
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.RequestEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"":"error>",
 get$on: function() {
  return $.TransactionEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', {
 get$on: function() {
  return $.VersionChangeRequestEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('Worker', {
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('SVGAngle', {"":"value="
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"":"type>"
});

$.$defineNativeClass('SVGElementInstance', {
 get$on: function() {
  return $.ElementInstanceEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"type>,height>,width>"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETileElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"type>,height>,width>"
});

$.$defineNativeClass('SVGFilterElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGImageElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGLength', {"":"value="
});

$.$defineNativeClass('SVGLengthList', {
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 get$length: function() {
  return this.numberOfItems;
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGNumber', {"":"value="
});

$.$defineNativeClass('SVGNumberList', {
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 get$length: function() {
  return this.numberOfItems;
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegList', {
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 get$length: function() {
  return this.numberOfItems;
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPatternElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGPointList', {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGRect', {"":"height>,width>"
});

$.$defineNativeClass('SVGRectElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGScriptElement', {"":"type="
});

$.$defineNativeClass('SVGStringList', {
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 get$length: function() {
  return this.numberOfItems;
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"":"type="
});

$.$defineNativeClass('SVGDocument', {
 $$dom_createEvent$1: function(eventType) {
  return this.createEvent(eventType);
}
});

$.$defineNativeClass('SVGElement', {
 get$elements: function() {
  return $.FilteredElementList$(this);
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children, t1;
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, value);
},
 set$innerHtml: function(svg) {
  var container = $.Element_Element$tag("div");
  container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  this.set$children($.index(container.get$children(), 0).get$children());
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGTransform', {"":"type>"
});

$.$defineNativeClass('SVGTransformList', {
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 get$length: function() {
  return this.numberOfItems;
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGElementInstanceList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('AudioBuffer', {"":"length>"
});

$.$defineNativeClass('AudioContext', {
 get$on: function() {
  return $.AudioContextEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

$.$defineNativeClass('AudioParam', {"":"value="
});

$.$defineNativeClass('BiquadFilterNode', {"":"type="
});

$.$defineNativeClass('OscillatorNode', {"":"type="
});

$.$defineNativeClass('ScriptProcessorNode', {
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
},
 on$2: function(arg0, arg1) {
  return this.get$on().call$2(arg0, arg1);
}
});

// 245 dynamic classes.
// 385 classes
// 35 !leaf
(function() {
  var v0_Uint8Array = 'Uint8Array|Uint8ClampedArray', v1_ComponentTransferFunctionElement = 'SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement', v2_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v3_SvgElement = [v1_ComponentTransferFunctionElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|'), v4_UIEvent = 'UIEvent|CompositionEvent|KeyboardEvent|MouseEvent|WheelEvent|TextEvent|TouchEvent|SVGZoomEvent', v5_Element = [v2_MediaElement, v3_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v6_CharacterData = 'CharacterData|Text|CDATASection|Comment', v7_Document = 'Document|HTMLDocument|SVGDocument', v8_DocumentFragment = 'DocumentFragment|ShadowRoot', v9_Node = [v5_Element, v6_CharacterData, v7_Document, v8_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|'), v10_AbstractWorker = 'AbstractWorker|SharedWorker|Worker', v11_WorkerContext = 'WorkerContext|DedicatedWorkerContext|SharedWorkerContext', v12_MediaStream = 'MediaStream|LocalMediaStream', v13_Request = 'IDBRequest|IDBOpenDBRequest|IDBVersionChangeRequest';
  $.dynamicSetMetadata([['WorkerContext', v11_WorkerContext], ['CSSValueList', 'CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue'], ['IDBCursor', 'IDBCursor|IDBCursorWithValue'], ['IDBRequest', v13_Request], ['AbstractWorker', v10_AbstractWorker], ['Uint8Array', v0_Uint8Array], ['ArrayBufferView', [v0_Uint8Array, 'ArrayBufferView|DataView|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array'].join('|')], ['Blob', 'Blob|File'], ['CharacterData', v6_CharacterData], ['CSSRule', 'CSSRule|CSSCharsetRule|CSSFontFaceRule|CSSImportRule|WebKitCSSKeyframeRule|WebKitCSSKeyframesRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSUnknownRule'], ['Document', v7_Document], ['DocumentFragment', v8_DocumentFragment], ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'], ['SVGComponentTransferFunctionElement', v1_ComponentTransferFunctionElement], ['HTMLMediaElement', v2_MediaElement], ['SVGElement', v3_SvgElement], ['Element', v5_Element], ['Entry', 'Entry|DirectoryEntry|FileEntry'], ['EntrySync', 'EntrySync|DirectoryEntrySync|FileEntrySync'], ['UIEvent', v4_UIEvent], ['Event', [v4_UIEvent, 'Event|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|ProgressEvent|XMLHttpRequestProgressEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent'].join('|')], ['Node', v9_Node], ['MediaStream', v12_MediaStream], ['EventTarget', [v9_Node, v10_AbstractWorker, v11_WorkerContext, v12_MediaStream, v13_Request, 'EventTarget|DOMApplicationCache|BatteryManager|EventSource|FileReader|FileWriter|XMLHttpRequest|XMLHttpRequestUpload|DOMWindow|MediaController|MediaSource|MediaStreamTrack|MediaStreamTrackList|MessagePort|Notification|PeerConnection00|Performance|RTCDataChannel|RTCPeerConnection|SourceBufferList|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebKitNamedFlow|WebSocket|IDBDatabase|IDBTransaction|SVGElementInstance|AudioContext'].join('|')], ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['AudioParam', 'AudioParam|AudioGain'], ['NodeList', 'NodeList|RadioNodeList'], ['StyleSheet', 'StyleSheet|CSSStyleSheet']]);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=aisDart.dart.js.map